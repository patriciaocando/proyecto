{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/ExpertLanguages.vue?vue&type=style&index=0&id=8a367d72&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/ExpertLanguages.vue","mtime":1596745539014},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sYW5ndWFnZUltYWdlIHsKICB3aWR0aDogNDhweDsKICBoZWlnaHQ6IDQ4cHg7CiAgYm9yZGVyLXJhZGl1czogOHB4Owp9Cg=="},{"version":3,"sources":["ExpertLanguages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACA;AACA","file":"ExpertLanguages.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h3>LENGUAJES ASOCIADOS:</h3>\n    <div v-for=\"language in userLanguages\" :key=\"language.id\">\n      <img class=\"languageImage\" :src=\"getImageName(language.image)\" />\n      <p>{{language.language}}</p>\n      <p>{{language.description}}</p>\n      <button @click=\"deleteUserLanguage(language.id)\">Borrar lenguaje</button>\n    </div>\n    <p v-show=\"showError\">{{ errorMessage }}</p>\n    <div>\n      <h3>TODOS LOS LENGUAJES:</h3>\n      <div v-for=\"languages in bbddLanguages\" :key=\"languages.id\">\n        <img class=\"languageImage\" :src=\"getImageName(languages.image)\" />\n        <p>{{languages.language}}</p>\n        <p>{{languages.description}}</p>\n        <button @click=\"addLanguage(languages.id)\">ASOCIAR A LENGUAJE</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  getRoleToken,\n  config,\n  ENDPOINT,\n} from \"../utils/helpers\";\nexport default {\n  name: \"ExpertLanguages\",\n\n  data() {\n    return {\n      userLanguages: [],\n      bbddLanguages: [],\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n      userRole: \"\",\n      //TOKEN\n      token: getAuthToken(),\n    };\n  },\n\n  methods: {\n    getImageName(name) {\n      let url = process.env.VUE_APP_STATIC;\n      return url + name;\n    },\n    //TRAER LOS LENGUAJES ASOCIADOS A UN EXPERTO\n    async getUserLanguages() {\n      this.userRole = getRoleToken(this.token);\n\n      if (this.userRole === \"experto\") {\n        try {\n          const response = await axios.get(\n            ENDPOINT + \"/expert/languages\",\n            config\n          );\n\n          this.userLanguages = response.data.data;\n        } catch (error) {\n          this.showError = true;\n          this.errorMessage = error.response.data.message;\n        }\n      }\n    },\n    //TRAER LOS LENGUAGES DE LA BBDD\n    async getLanguages() {\n      try {\n        await this.getUserLanguages();\n        const response = await axios.get(ENDPOINT + \"/languages\");\n        this.bbddLanguages = response.data.data;\n\n        for (const language of this.userLanguages) {\n          for (const [index, bbddlanguageAux] of this.bbddLanguages.entries()) {\n            if (language.id === bbddlanguageAux.id) {\n              this.bbddLanguages.splice(index, 1);\n            }\n          }\n        }\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //BORRAR LENGUAJE DE UN EXPERTO\n    async deleteUserLanguage(languageId) {\n      try {\n        const response = await axios.delete(\n          ENDPOINT + \"/users/delete-language/\" + languageId,\n          config\n        );\n        location.reload();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //ASOCIAR UN NUEVO LENGUAJE\n    async addLanguage(languageId) {\n      console.log(languageId);\n      try {\n        let data = {\n          newlanguage: languageId,\n        };\n        const response = await axios.put(\n          ENDPOINT + \"/users/add-language\",\n          data,\n          config\n        );\n        location.reload();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  created() {\n    this.getLanguages();\n  },\n};\n</script>\n\n<style scoped>\n.languageImage {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n}\n</style>"]}]}