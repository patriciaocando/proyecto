{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/Question.vue","mtime":1598047288947},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZvcm1hdCwgZm9ybWF0RGlzdGFuY2UgfSBmcm9tICJkYXRlLWZucyI7CmltcG9ydCBlcyBmcm9tICJkYXRlLWZucy9sb2NhbGUvZXMiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJRdWVzdGlvbiIsCiAgcHJvcHM6IHsKICAgIHF1ZXN0aW9uOiBPYmplY3QsCiAgICByb3V0ZTogU3RyaW5nLAogIH0sCiAgbWV0aG9kczogewogICAgZ2V0Rm9ybWF0KGRhdGUpIHsKICAgICAgcmV0dXJuIGZvcm1hdChuZXcgRGF0ZShkYXRlKSwgImRkL00veXl5eSIsIHsgbG9jYWxlOiBlcyB9KTsKICAgIH0sCiAgICBnZXREaXN0YW5jZShkYXRlKSB7CiAgICAgIHJldHVybiBmb3JtYXREaXN0YW5jZShuZXcgRGF0ZShkYXRlKSwgbmV3IERhdGUoKSwgeyBsb2NhbGU6IGVzIH0pOwogICAgfSwKICAgIGdldEltYWdlTmFtZShuYW1lKSB7CiAgICAgIHJldHVybiBwcm9jZXNzLmVudi5WVUVfQVBQX1NUQVRJQyArIG5hbWU7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"questionInfo\">\n    <div class=\"autorInfo\">\n      <img class=\"avatar\" :src=\"getImageName(question.avatar)\" />\n      <p>{{ question.name_user }}</p>\n      <div v-if=\"route=== 'UserQuestions'\">\n        <button id=\"editButton\" @click=\"$emit('editquestion', question.id)\">Editar pregunta</button>\n      </div>\n    </div>\n    <h3>{{ question.title }}</h3>\n\n    <!--METADATA FECHA-->\n    <span class=\"dataMeta\">\n      <p class=\"accesibilityTxt\">\n        Formulada: {{ getFormat(question.date) }} | Hace:\n        {{ getDistance(question.date) }}\n      </p>\n      <p\n        :class=\"'languageStyle ' + question.name_language.toLowerCase()\"\n      >{{ question.name_language }}</p>\n    </span>\n    <!--CONTENIDO PREGUNTA-->\n    <p class=\"lengthTxt\">{{ question.question_text }}</p>\n\n    <!--METADATA RESPUESTAS-->\n    <div class=\"answerMeta\">\n      <h3>\n        <small>\n          RESPUESTAS\n          <b class=\"numberQuestions\">{{ question.answers }}</b>\n        </small>\n      </h3>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { format, formatDistance } from \"date-fns\";\nimport es from \"date-fns/locale/es\";\n\nexport default {\n  name: \"Question\",\n  props: {\n    question: Object,\n    route: String,\n  },\n  methods: {\n    getFormat(date) {\n      return format(new Date(date), \"dd/M/yyyy\", { locale: es });\n    },\n    getDistance(date) {\n      return formatDistance(new Date(date), new Date(), { locale: es });\n    },\n    getImageName(name) {\n      return process.env.VUE_APP_STATIC + name;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.questionInfo {\n  text-align: left;\n  background-color: var(--ligthColor);\n  padding: 2rem;\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n}\n\n.lengthTxt {\n  word-break: break-word;\n}\n\n.numberQuestions {\n  color: var(--blue);\n}\n\n.dataMeta {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0.5rem 0;\n}\n\n.autorInfo {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.answerMeta h3 {\n  margin: 2rem 0 0;\n}\n@media only screen and (min-width: 600px) {\n  .dataMeta {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n\n@media only screen and (min-width: 1200px) {\n  .autorInfo {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n  }\n  .autorInfo p {\n    flex-grow: 1;\n    margin-left: 0.5rem;\n  }\n}\n</style>"]}]}