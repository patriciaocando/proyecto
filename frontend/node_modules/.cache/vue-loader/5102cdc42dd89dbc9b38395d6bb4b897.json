{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/UserProfile.vue?vue&type=template&id=6ef6ca5e&scoped=true&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/UserProfile.vue","mtime":1598301642183},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}