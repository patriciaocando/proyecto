{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Profile.vue","mtime":1598052366348},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IHsKICBnZXRBdXRoVG9rZW4sCiAgZ2V0SWRUb2tlbiwKICBhbGVydEZ1bmN0aW9uLAogIGdldFJvbGVUb2tlbiwKICBjb25maWcsCiAgRU5EUE9JTlQsCn0gZnJvbSAiLi4vdXRpbHMvaGVscGVycyI7CgppbXBvcnQgdXNlcnByb2ZpbGUgZnJvbSAiQC9jb21wb25lbnRzL1VzZXJQcm9maWxlLnZ1ZSI7CmltcG9ydCBjaGFuZ2VwYXNzd29yZCBmcm9tICJAL2NvbXBvbmVudHMvQ2hhbmdlUGFzc3dvcmQudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvZmlsZSIsCiAgY29tcG9uZW50czogewogICAgdXNlcnByb2ZpbGUsCiAgICBjaGFuZ2VwYXNzd29yZCwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy92YXJpYWJsZXMgZGUgdmlzdGEKICAgICAgcHJvZmlsZToge30sCiAgICAgIHVzZXJMYW5ndWFnZXM6IFtdLAogICAgICB1c2VyUm9sZTogIiIsCiAgICAgIGFjdHVhbFBhc3N3b3JkOiAiIiwKICAgICAgLy92YXJpYWJsZXMgZGUgZ2VzdGlvbiBkZSBlcnJvcmVzCiAgICAgIHNob3dFcnJvcjogZmFsc2UsCiAgICAgIGVycm9yTWVzc2FnZTogIiIsCiAgICAgIHVzZXJJZDogIiIsCgogICAgICAvL1RPS0VOCiAgICAgIHRva2VuOiAiIiwKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgZGVsZXRlRXJyb3IoKSB7CiAgICAgIHRoaXMuc2hvd0Vycm9yID0gZmFsc2U7CiAgICB9LAogICAgYXN5bmMgdXBkYXRlVXNlckRhdGEodXNlckRhdGEpIHsKICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIC8vREFUT1MgREVMIFVTVUFSSU8gUVVFIFJFQ0lCTyBERVNERSBFTCBDT01QT05FTlRFCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgibmFtZSIsIHVzZXJEYXRhLm5hbWUpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoImxhc3RfbmFtZSIsIHVzZXJEYXRhLmxhc3RuYW1lKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJ1c2VybmFtZSIsIHVzZXJEYXRhLnVzZXJuYW1lKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJlbWFpbCIsIHVzZXJEYXRhLmVtYWlsKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJwcm9maWxlX2JpbyIsIHVzZXJEYXRhLnByb2ZpbGUpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoImF2YXRhciIsIHVzZXJEYXRhLmF2YXRhcik7CgogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucHV0KAogICAgICAgICAgRU5EUE9JTlQgKyAiL3VzZXJzL2VkaXQtcHJvZmlsZS8iICsgdGhpcy51c2VySWQsCiAgICAgICAgICBmb3JtRGF0YSwKICAgICAgICAgIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGdldEF1dGhUb2tlbigpLAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIHsgaGVhZGVyOiB7ICJDb250ZW50LXR5cGUiOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgfSB9CiAgICAgICAgKTsKICAgICAgICAvL0FMRVJUIERFIEVESVRBUgogICAgICAgIGF3YWl0IGFsZXJ0RnVuY3Rpb24oCiAgICAgICAgICAic3VjY2VzcyIsCiAgICAgICAgICAiQWN0dWFsaXphZG8iLAogICAgICAgICAgYEhhcyBlZGl0YWRvIGxvcyBkYXRvcyBkZSAke3VzZXJEYXRhLnVzZXJuYW1lfSBleGl0b3NhbWVudGVgCiAgICAgICAgKTsKICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLnNob3dFcnJvciA9IHRydWU7CiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CiAgICAgIH0KICAgIH0sCiAgICAvL1RSQUlHTyBMQSBJTkZPIERFTCBQRVJGSUwgREUgVVNVQVJJTyBERSBMQSBCQkRECiAgICBhc3luYyBnZXRVc2VyUHJvZmlsZSgpIHsKICAgICAgdGhpcy50b2tlbiA9IGdldEF1dGhUb2tlbigpOwogICAgICB0cnkgewogICAgICAgIHRoaXMudXNlcklkID0gZ2V0SWRUb2tlbih0aGlzLnRva2VuKTsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgKICAgICAgICAgIEVORFBPSU5UICsgIi91c2Vycy9wcm9maWxlLyIgKyB0aGlzLnVzZXJJZCwKICAgICAgICAgIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGdldEF1dGhUb2tlbigpLAogICAgICAgICAgICB9LAogICAgICAgICAgfQogICAgICAgICk7CiAgICAgICAgdGhpcy5wcm9maWxlID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgIHRoaXMucHJvZmlsZS5hdmF0YXIgPSBwcm9jZXNzLmVudi5WVUVfQVBQX1NUQVRJQyArIHRoaXMucHJvZmlsZS5hdmF0YXI7CiAgICAgICAgdGhpcy5hY3R1YWxQYXNzd29yZCA9IHJlc3BvbnNlLmRhdGEuZGF0YS5wYXNzd29yZDsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLnNob3dFcnJvciA9IHRydWU7CiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CiAgICAgIH0KICAgIH0sCiAgICAvL0NBTUJJTyBERSBDT05UUkFTRcORQSBFTiBMQSBCQkRECiAgICBhc3luYyBwb3N0TmV3UGFzc3dvcmQoZGF0YSkgewogICAgICB0cnkgewogICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgKICAgICAgICAgIEVORFBPSU5UICsgYC91c2Vycy8ke3RoaXMudXNlcklkfS9wYXNzd29yZGAsCiAgICAgICAgICBkYXRhLAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogZ2V0QXV0aFRva2VuKCksCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9CiAgICAgICAgKTsKICAgICAgICBhbGVydEZ1bmN0aW9uKAogICAgICAgICAgInN1Y2Nlc3MiLAogICAgICAgICAgIk5VRVZBIENPTlRSQVNFw5FBIiwKICAgICAgICAgICJIYXMgYWN0dWFsaXphZG8gdHUgY29udGFzZcOxYSBjb24gw6l4aXRvLCBoYXogTG9naW4gZGUgbnVldm8iCiAgICAgICAgKTsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2xvZ2luIik7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIHRoaXMuc2hvd0Vycm9yID0gdHJ1ZTsKICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlLmRhdGEubWVzc2FnZTsKICAgICAgfQogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFVzZXJQcm9maWxlKCk7CiAgfSwKfTsK"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <!--DATOS DE USUARIO-->\n\n    <userprofile v-on:iduserupdate=\"updateUserData\" :userdata=\"profile\" :cancel=\"deleteError\" />\n    <p v-show=\"showError\">{{ errorMessage }}</p>\n    <!--CAMBIO DE CONTRASEÑA-->\n    <div>\n      <changepassword :actualPassword=\"actualPassword\" v-on:changePassword=\"postNewPassword\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  getRoleToken,\n  config,\n  ENDPOINT,\n} from \"../utils/helpers\";\n\nimport userprofile from \"@/components/UserProfile.vue\";\nimport changepassword from \"@/components/ChangePassword.vue\";\n\nexport default {\n  name: \"Profile\",\n  components: {\n    userprofile,\n    changepassword,\n  },\n\n  data() {\n    return {\n      //variables de vista\n      profile: {},\n      userLanguages: [],\n      userRole: \"\",\n      actualPassword: \"\",\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n      userId: \"\",\n\n      //TOKEN\n      token: \"\",\n    };\n  },\n\n  methods: {\n    deleteError() {\n      this.showError = false;\n    },\n    async updateUserData(userData) {\n      let formData = new FormData();\n      //DATOS DEL USUARIO QUE RECIBO DESDE EL COMPONENTE\n      formData.append(\"name\", userData.name);\n      formData.append(\"last_name\", userData.lastname);\n      formData.append(\"username\", userData.username);\n      formData.append(\"email\", userData.email);\n      formData.append(\"profile_bio\", userData.profile);\n      formData.append(\"avatar\", userData.avatar);\n\n      try {\n        const response = await axios.put(\n          ENDPOINT + \"/users/edit-profile/\" + this.userId,\n          formData,\n          {\n            headers: {\n              Authorization: getAuthToken(),\n            },\n          },\n          { header: { \"Content-type\": \"multipart/form-data\" } }\n        );\n        //ALERT DE EDITAR\n        await alertFunction(\n          \"success\",\n          \"Actualizado\",\n          `Has editado los datos de ${userData.username} exitosamente`\n        );\n        location.reload();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //TRAIGO LA INFO DEL PERFIL DE USUARIO DE LA BBDD\n    async getUserProfile() {\n      this.token = getAuthToken();\n      try {\n        this.userId = getIdToken(this.token);\n        const response = await axios.get(\n          ENDPOINT + \"/users/profile/\" + this.userId,\n          {\n            headers: {\n              Authorization: getAuthToken(),\n            },\n          }\n        );\n        this.profile = response.data.data;\n        this.profile.avatar = process.env.VUE_APP_STATIC + this.profile.avatar;\n        this.actualPassword = response.data.data.password;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //CAMBIO DE CONTRASEÑA EN LA BBDD\n    async postNewPassword(data) {\n      try {\n        console.log(data);\n        const response = await axios.post(\n          ENDPOINT + `/users/${this.userId}/password`,\n          data,\n          {\n            headers: {\n              Authorization: getAuthToken(),\n            },\n          }\n        );\n        alertFunction(\n          \"success\",\n          \"NUEVA CONTRASEÑA\",\n          \"Has actualizado tu contaseña con éxito, haz Login de nuevo\"\n        );\n        this.$router.push(\"/login\");\n      } catch (error) {\n        console.log(error);\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  created() {\n    this.getUserProfile();\n  },\n};\n</script>\n\n<style scoped></style>\n"]}]}