{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue?vue&type=style&index=0&id=4e9db972&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue","mtime":1599162948878},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnF1ZXN0aW9uQW5zd2VyQ29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1saWd0aENvbG9yKTsKICBtYXJnaW4tYm90dG9tOiAxLjVyZW07CiAgcGFkZGluZy1ib3R0b206IDEuNXJlbTsKICBib3JkZXItcmFkaXVzOiAwLjVyZW07Cn0KCi5oaWRlQnV0dG9uIHsKICBkaXNwbGF5OiBub25lOwp9CgouaGlkZVF1ZXN0aW9uIHsKICBkaXNwbGF5OiBub25lOwp9CgouYW5zd2VyTWV0YSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBzcGFjZS1hcm91bmQ7CiAgbWFyZ2luOiAwIDAgMS41cmVtIDA7Cn0KCiNidXR0b25BbnN3ZXIgewogIG1hcmdpbjogMCAxLjVyZW07Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIHsKICAuYW5zd2VyTWV0YSB7CiAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogICAgbWFyZ2luLWJvdHRvbTogMXJlbTsKICB9Cn0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHsKICAuYW5zd2VyTWV0YSB7CiAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICAgIG1hcmdpbi1ib3R0b206IDJyZW07CiAgfQp9Cg=="},{"version":3,"sources":["GetQuestions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GetQuestions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"questionAnswerContainer\" v-for=\"(question, index) in questions\" :key=\"question.id\">\n      <question\n        :question=\"question\"\n        :route=\"route\"\n        :isUser=\"isUser\"\n        @editquestion=\"editQuestionId\"\n        @showmethsanswer=\"showmethsanswer\"\n        :index=\"index\"\n        @questionDeleted=\"questionDeleted\"\n        @questionEdited=\"questionEdited\"\n      />\n      <button\n        v-if=\"!isUser\"\n        :class=\"{ hideButton: question.answers <= 0 }\"\n        @click=\"$router.push({ name: 'Register' })\"\n      >Reg√≠strate para ver las respuestas</button>\n\n      <getanswer\n        v-show=\"hideAnswer\"\n        class=\"answerContent\"\n        v-if=\"index === answer\"\n        :answers=\"answers\"\n        @newVote=\"newVote\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport question from \"@/components/Question.vue\";\nimport getanswer from \"@/components/GetAnswer.vue\";\nimport userData from \"@/dataStorage/userData\";\n\nexport default {\n  name: \"ShowQuestions\",\n  components: {\n    getanswer,\n    question,\n  },\n  props: {\n    questions: Array,\n    answers: Array,\n  },\n  data() {\n    return {\n      seeAnswersButton: false,\n      hideAnswer: false,\n\n      //Variable para saber el indice de la pregunta de la que se desea ver la respuesta\n      answer: \"\",\n      buttonText: \"VER RESPUESTAS\",\n\n      //store del usuario\n      sharedStore: userData.state,\n    };\n  },\n  computed: {\n    isUser() {\n      return this.sharedStore.isLogged;\n    },\n    route() {\n      return this.$route.name;\n    },\n  },\n\n  methods: {\n    questionEdited() {\n      this.$emit(\"questionEdited\");\n    },\n    questionDeleted() {\n      this.$emit(\"questionDeleted\");\n    },\n    newVote(data) {\n      this.$emit(\"newVote\", data);\n    },\n    editQuestionId(id) {\n      this.$emit(\"editquestion\", id);\n    },\n    showmethsanswer({ id, index }) {\n      this.answer = index;\n      this.hideAnswer = !this.hideAnswer;\n      this.$emit(\"showAnswers\", id);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.questionAnswerContainer {\n  background-color: var(--ligthColor);\n  margin-bottom: 1.5rem;\n  padding-bottom: 1.5rem;\n  border-radius: 0.5rem;\n}\n\n.hideButton {\n  display: none;\n}\n\n.hideQuestion {\n  display: none;\n}\n\n.answerMeta {\n  display: flex;\n  flex-direction: column;\n  align-items: space-around;\n  margin: 0 0 1.5rem 0;\n}\n\n#buttonAnswer {\n  margin: 0 1.5rem;\n}\n\n@media only screen and (min-width: 600px) {\n  .answerMeta {\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-bottom: 1rem;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .answerMeta {\n    flex-direction: row;\n    justify-content: flex-end;\n    margin-bottom: 2rem;\n  }\n}\n</style>\n"]}]}