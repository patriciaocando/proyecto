{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue?vue&type=style&index=0&id=4e9db972&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue","mtime":1596963339990},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhpZGVCdXR0b24gewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5oaWRlUXVlc3Rpb24gewogIGRpc3BsYXk6IG5vbmU7Cn0KLnF1ZXN0aW9uSW5mbyB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQoKLmF1dG9ySW5mbyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93Owp9Cg=="},{"version":3,"sources":["GetQuestions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"GetQuestions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"questionInfo\" v-for=\"(question,index) in questions\" :key=\"question.id\">\n      <div class=\"autorInfo\">\n        <img class=\"avatar\" :src=\"getImageName(question.avatar)\" />\n        <p>{{ question.name_user }}</p>\n      </div>\n      <h3>{{ question.title }}</h3>\n      <span>\n        <p>Formulada: {{getFormat(question.date)}} | Hace: {{getDistance(question.date)}}</p>\n        <p>{{ question.name_language }}</p>\n      </span>\n      <p>{{ question.question_text }}</p>\n      <div>\n        <p>\n          ID {{question.id}} RESPUESTAS\n          <b>{{ question.answers }}</b>\n          <button\n            v-show=\"isUser\"\n            :class=\"{ hideButton: question.answers <= 0 }\"\n            @click=\"sendQuestionId(question.id, index)\"\n          >VER RESPUESTAS</button>\n        </p>\n        <div v-if=\"index===answer\">\n          <div v-for=\"answer in answers\" :key=\"answer.id\">\n            <div class=\"autorInfo\">\n              <img class=\"avatar\" :src=\"getImageName(answer.avatarExpert)\" />\n              <p>{{ answer.expert }}</p>\n            </div>\n            <p>{{answer.answer}}</p>\n            <p>respondida: {{getFormat(answer.respond)}} | Hace: {{getDistance(answer.respond)}}</p>\n            <p>{{answer.rating}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getAuthToken } from \"../utils/helpers\";\nimport { format, formatDistance } from \"date-fns\";\nimport es from \"date-fns/locale/es\";\n\nexport default {\n  name: \"ShowQuestions\",\n  components: {},\n  props: {\n    questions: Array,\n    answers: Array,\n  },\n  data() {\n    return {\n      seeAnswersButton: false,\n      //variable para ocultar boton si no esta autenticado el usuario\n      isUser: \"\",\n\n      //Variable para saber el inice de la pregunta de la que se desea ver la respuesta\n      answer: \"\",\n\n      //TOKEN\n      token: getAuthToken(),\n    };\n  },\n  methods: {\n    getAutentication() {\n      if (this.token === null) {\n        this.isUser = false;\n      } else {\n        this.isUser = true;\n      }\n    },\n    sendQuestionId(id, index) {\n      this.answer = index;\n      this.$emit(\"showAnswers\", id);\n    },\n    getFormat(date) {\n      return format(new Date(date), \"dd/M/yyyy\", { locale: es });\n    },\n    getDistance(date) {\n      return formatDistance(new Date(date), new Date(), { locale: es });\n    },\n    sendSearchParams() {\n      let params = {\n        name: this.autor,\n        direction: this.order,\n        search: this.search,\n        language: this.language,\n        date_init: this.dateInit,\n        date_end: this.dateEnd,\n        status: this.status,\n      };\n    },\n    showFilter() {\n      if (this.filter) {\n        this.filter = false;\n      } else {\n        this.filter = true;\n      }\n    },\n    getImageName(name) {\n      return process.env.VUE_APP_STATIC + name;\n    },\n  },\n  created() {\n    this.getAutentication();\n  },\n};\n</script>\n\n<style scoped>\n.hideButton {\n  display: none;\n}\n\n.hideQuestion {\n  display: none;\n}\n.questionInfo {\n  text-align: left;\n}\n\n.autorInfo {\n  display: flex;\n  flex-direction: row;\n}\n</style>\n"]}]}