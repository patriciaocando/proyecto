{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/UserQuestions.vue?vue&type=style&index=0&id=bea3be10&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/UserQuestions.vue","mtime":1598218134533},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKKiB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBtYXJnaW4tYm90dG9tOiAxcmVtOwp9CgoucXVlc3Rpb25FZGl0IHsKICAvKiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwogIHdpZHRoOiAxMDAlOyAqLwogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxpZ3RoQ29sb3IpOwogIHBhZGRpbmc6IDJyZW0gMCAycmVtIDJyZW07CiAgYm9yZGVyLXJhZGl1czogMC41cmVtOwogIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDEzcHggMTRweCAtMTNweCByZ2JhKDE3MywgMTczLCAxNzMsIDAuNjQpOwogIC1tb3otYm94LXNoYWRvdzogMHB4IDEzcHggMTRweCAtMTNweCByZ2JhKDE3MywgMTczLCAxNzMsIDAuNjQpOwogIGJveC1zaGFkb3c6IDBweCAxM3B4IDE0cHggLTEzcHggcmdiYSgxNzMsIDE3MywgMTczLCAwLjY0KTsKfQoKdGV4dGFyZWEgewogIGhlaWdodDogMjByZW07Cn0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDBweCkgewogIC5idXR0b25zSW5zaWRlQ29udGFpbmVyIHsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKICB9CgogIC5idXR0b25zQ29udGFpbmVyIHsKICAgIG1hcmdpbjogMDsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogIH0KICAuZGVsZXRlQnV0dG9uIHsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IDMlIDUwJTsKICAgIGZsZXgtZ3JvdzogMTsKICB9Cn0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHsKICAuYnV0dG9uc0NvbnRhaW5lciB7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgd2lkdGg6IDk1JTsKICB9CiAgLmRlbGV0ZUJ1dHRvbiB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxJSA1MCU7CiAgICBwYWRkaW5nOiAycmVtOwogICAgZmxleC1ncm93OiAwOwogIH0KfQo="},{"version":3,"sources":["UserQuestions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8NA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserQuestions.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <span id=\"sectionTitle\" v-show=\"!hideQuestion\">\n      <h1>Tus preguntas</h1>\n      <h2>Aquí puedes ver las preguntas que has realizado</h2>\n    </span>\n\n    <showquestions\n      id=\"questionsBody\"\n      v-if=\"!hideQuestion\"\n      :questions=\"questions\"\n      :answers=\"answers\"\n      @showAnswers=\"getAnswers\"\n      @rateAnswer=\"rateAnswer\"\n      @editquestion=\"getQuestionData\"\n    />\n\n    <div v-show=\"noQuestions\">\n      <p>Aww... aun no has preguntado nada aún</p>\n      <p>¿Quieres hacer una?</p>\n      <router-link :to=\"{ name: 'NewQuestion' }\">Hacer pregunta</router-link>\n    </div>\n\n    <!--EDITAR PREGUNTA-->\n    <div class=\"questionEdit\" v-if=\"hideQuestion\">\n      <h2>EDITAR PREGUNTA:</h2>\n\n      <h3>TITULO:</h3>\n      <input class=\"titleInput\" type=\"text\" :placeholder=\"title\" v-model=\"title\" />\n\n      <textarea type=\"text\" name=\"textQuestion\" rows=\"4\" :placeholder=\"content\" v-model=\"content\"></textarea>\n\n      <div class=\"buttonsContainer\">\n        <button class=\"deleteButton\" @click=\"deleteQuestion()\">Borrar pregunta</button>\n        <div class=\"buttonsInsideContainer\">\n          <button @click=\"saveEdition()\">GUARDAR</button>\n          <button class=\"cancelButton\" @click=\"cancelEdition()\">CANCELAR</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport question from \"@/components/Question.vue\";\nimport showquestions from \"@/components/GetQuestions.vue\";\n\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  config,\n  ENDPOINT,\n} from \"../utils/helpers\";\n\nexport default {\n  name: \"UserQuestions\",\n  data() {\n    return {\n      questions: [],\n      answers: [],\n      token: \"\",\n      hideQuestion: false,\n      showQuestion: true,\n      noQuestions: false,\n      count: \"\",\n\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n\n      //Variables de la pregunta que se debe editar\n      title: \"\",\n      content: \"\",\n      idQuestion: \"\",\n    };\n  },\n  components: {\n    question,\n    showquestions,\n  },\n\n  methods: {\n    //DESDE LA VISTA\n    cancelEdition() {\n      this.title = \"\";\n      this.content = \"\";\n      this.hideQuestion = false;\n      this.showQuestion = true;\n    },\n    //TRAER LAS PREGUNTAS QUE HA HECHO EL USUARIO DESDE LA BBDD\n    async getQuestionsAnwer() {\n      try {\n        const response = await axios.get(ENDPOINT + \"/my-questions\", {\n          headers: {\n            Authorization: getAuthToken(),\n          },\n        });\n\n        let resultNumber = response.data.data;\n        if (resultNumber.length === 0) {\n          this.noQuestions = true;\n        } else {\n          this.questions = response.data.data;\n        }\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //TRAER LAS RESPUESTA DE LA PREGUNTA SELECCIONADA SI ES USUARIO LOGUEADO\n    async getAnswers(idQuestion) {\n      try {\n        const response = await axios.get(\n          ENDPOINT + \"/answer/\" + idQuestion,\n          config\n        );\n        this.answers = response.data.data;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //VOTAR UNA RESPUESTA\n    async rateAnswer(data) {\n      let rating = {\n        rating: data.rating,\n      };\n\n      try {\n        const response = await axios.post(\n          ENDPOINT + \"/rating/answer/\" + data.id,\n          rating,\n          config\n        );\n        alertFunction(\n          \"success\",\n          \"Ranking\",\n          `¡Has Votado con ${data.rating} puntos!`\n        );\n      } catch (error) {\n        this.errorMessage = error.response.data.message;\n        await alertFunction(\"error\", \"Opss!\", `Ya has votado esta respuesta`);\n      }\n    },\n\n    //DESDE EL COMPONENTE\n    async getQuestionData(id) {\n      this.hideQuestion = true;\n\n      try {\n        const response = await axios.get(ENDPOINT + \"/question/\" + id, {\n          headers: {\n            Authorization: getAuthToken(),\n          },\n        });\n\n        this.title = response.data.data.title;\n        this.content = response.data.data.question_text;\n        this.idQuestion = id;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async saveEdition() {\n      //DATA\n      let data = {\n        title: this.title,\n        content: this.content,\n      };\n\n      try {\n        const response = await axios.put(\n          ENDPOINT + \"/edit-question/\" + this.idQuestion,\n          data,\n          config\n        );\n        //ALERT DE EDITAR\n        alertFunction(\n          \"success\",\n          \"Actualizado\",\n          `Has editado tu pregunta exitosamente`\n        );\n        await this.getQuestionsAnwer();\n        this.hideQuestion = false;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n\n      //ALERT DE EDITAR\n      alertFunction(\n        \"success\",\n        \"Actualizado\",\n        `Has editado tu pregunta exitosamente`\n      );\n    },\n    async deleteQuestion() {\n      try {\n        const response = await axios.delete(\n          ENDPOINT + \"/delete-question/\" + this.idQuestion,\n          config\n        );\n        alertFunction(\"Borrada!\", \"Tu pregunta ha sido borrada.\", \"success\");\n        this.hideQuestion = false;\n        await this.getQuestionsAnwer();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  async created() {\n    this.token = getAuthToken();\n    await this.getQuestionsAnwer();\n  },\n};\n</script>\n\n<style scoped>\n* {\n  text-align: left;\n  margin-bottom: 1rem;\n}\n\n.questionEdit {\n  /*  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 100%; */\n  background-color: var(--ligthColor);\n  padding: 2rem 0 2rem 2rem;\n  border-radius: 0.5rem;\n  -webkit-box-shadow: 0px 13px 14px -13px rgba(173, 173, 173, 0.64);\n  -moz-box-shadow: 0px 13px 14px -13px rgba(173, 173, 173, 0.64);\n  box-shadow: 0px 13px 14px -13px rgba(173, 173, 173, 0.64);\n}\n\ntextarea {\n  height: 20rem;\n}\n@media only screen and (min-width: 600px) {\n  .buttonsInsideContainer {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n\n  .buttonsContainer {\n    margin: 0;\n    flex-direction: row;\n    align-items: center;\n  }\n  .deleteButton {\n    background-position: 3% 50%;\n    flex-grow: 1;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .buttonsContainer {\n    align-items: center;\n    justify-content: space-between;\n    width: 95%;\n  }\n  .deleteButton {\n    background-position: 1% 50%;\n    padding: 2rem;\n    flex-grow: 0;\n  }\n}\n</style>\n"]}]}