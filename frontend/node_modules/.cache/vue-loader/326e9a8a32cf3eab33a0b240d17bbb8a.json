{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Dashboard.vue?vue&type=style&index=0&id=22ba47ca&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Dashboard.vue","mtime":1597944175673},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYWluVmlldyBoMyB7CiAgbWFyZ2luLXRvcDogMnJlbTsKfQouc2VhcmNoUmVzdWx0IHsKICBtYXJnaW46IDJyZW0gMDsKfQouZGFzaEhvbWVDb250ZW50IHsKICBtYXJnaW46IDFyZW07CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQojc2VhcmNoQ29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1saWd0aEJsdWUpOwogIHBhZGRpbmc6IDFyZW07CiAgYm9yZGVyLXJhZGl1czogMXJlbTsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgZmxleC13cmFwOiB3cmFwOwp9CmgzLAojc2VhcmNoQ29udGFpbmVyIGgxIHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbjogMC41cmVtOwp9Cgojc2VhcmNoQ29udGFpbmVyIC5zZWFyY2ggewogIHdpZHRoOiAxMDAlOwp9CgpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMHB4KSB7CiAgI3NlYXJjaENvbnRhaW5lciB7CiAgICB3aWR0aDogOTAlOwogIH0KICAubWFpblZpZXcgewogICAgd2lkdGg6IDk1JTsKICB9Cn0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHsKICAubWFpblZpZXcgewogICAgbWFyZ2luOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgfQogIC5zZWFyY2hSZXN1bHQgewogICAgbWFyZ2luOiAycmVtIDA7CiAgfQogIC5kYXNoSG9tZUNvbnRlbnQgewogICAgbWFyZ2luOiAycmVtOwogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7CiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDsKICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7CiAgfQogICNzZWFyY2hDb250YWluZXIgewogICAgcGFkZGluZzogMnJlbTsKICAgIG1heC13aWR0aDogNjB2dzsKICB9CiAgaDMsCiAgI3NlYXJjaENvbnRhaW5lciBoMSB7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgbWFyZ2luOiAwLjVyZW0gMDsKICB9Cn0K"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <!--ELEMENTOS COMUNES-->\n    <div class=\"dashHomeContent\">\n      <sidebardashboard />\n\n      <!--COMPONENTE DE BUSQUEDA-->\n      <div id=\"searchContainer\" v-show=\"hideSearchBar\">\n        <h3>BIENVENIDO</h3>\n        <h1>Encuentra todas las respuestas que necesitas</h1>\n        <searchcomponent class=\"search\" v-on:queryParams=\"collectParams\" :languages=\"languages\" />\n      </div>\n      <!--GESTION DE ERRORES-->\n      <p v-show=\"showError\">{{ errorMessage }}</p>\n      <!--MOSTRAR LOS RESULTADOS DE LA BUSQUEDA-->\n      <div class=\"searchResult\" v-show=\"showResultSearch\">\n        <h3>RESULTADOS DE TU BÚSQUEDA:</h3>\n        <getquestions :questions=\"questionsResultSearch\" />\n      </div>\n      <div class=\"mainView\">\n        <!--VISTA EXPERTO-->\n        <div v-if=\"role === 'experto'\">\n          <h3 v-show=\"hideSearchBar\">ACTIVIDAD RECIENTE</h3>\n          <showquestionstoexpert\n            v-show=\"allQuestions\"\n            :questions=\"questionsToExpert\"\n            v-on:getQuestion=\"getQuestion\"\n          />\n          <answerquestion\n            v-show=\"!allQuestions\"\n            :question=\"question\"\n            v-on:publishAnswer=\"publishAnswer\"\n            v-on:cancelEdition=\"cancelEdition\"\n          />\n        </div>\n\n        <!--VISTA ADMIN-->\n\n        <!--VISTA ESTUDIANTE-->\n        <div v-show=\"role === 'estudiante'\">\n          <div>\n            <h3>ACTIVIDAD RECIENTE</h3>\n            <ShowQuestionsAnswer\n              :questions=\"studentQuestions\"\n              :answer=\"studentAnswers\"\n              :count=\"count\"\n              v-on:questionData=\"getQuestionData\"\n              v-show=\"showQuestion\"\n            />\n            <div v-show=\"noQuestions\">\n              <p>¡Haz tu primera pregunta!</p>\n            </div>\n          </div>\n          <!--EDITAR PREGUNTA-->\n          <div v-show=\"hideQuestion\">\n            <h2>EDITAR PREGUNTA:</h2>\n            <h3>TITULO:</h3>\n            <input type=\"text\" :placeholder=\"title\" v-model=\"title\" />\n            <textarea\n              type=\"text\"\n              name=\"textQuestion\"\n              rows=\"4\"\n              :placeholder=\"content\"\n              v-model=\"content\"\n            ></textarea>\n            <p v-show=\"showError\">{{ errorMessage }}</p>\n            <button @click=\"deleteQuestion()\">Borrar pregunta</button>\n            <div>\n              <button @click=\"saveEdition()\">GUARDAR</button>\n              <button class=\"cancelButton\" @click=\"cancelEdition()\">CANCELAR</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//COMPONENTES DE BUSQUEDA\nimport searchcomponent from \"@/components/SearchComponent.vue\";\nimport getquestions from \"@/components/GetQuestions.vue\";\n//COMPONENTES PARA EXPERTO\nimport answerquestion from \"@/components/AnswerQuestion.vue\";\nimport showquestionstoexpert from \"@/components/GetQuestionsToExpert.vue\";\nimport ShowQuestionsAnswer from \"@/components/GetQuestionAnswer.vue\";\n\nimport sidebardashboard from \"@/components/SidebarDashboard.vue\";\n\n//IMPORTAR UTILIDADES\nimport { format, formatDistance, formatRelative, subDays } from \"date-fns\";\nimport es from \"date-fns/locale/es\";\nimport axios from \"axios\";\nimport {\n  getAuthToken,\n  getRoleToken,\n  getIdToken,\n  alertFunction,\n  config,\n  ENDPOINT,\n} from \"../utils/helpers\";\n\nexport default {\n  name: \"HomeExpert\",\n  components: {\n    getquestions,\n    searchcomponent,\n    showquestionstoexpert,\n    answerquestion,\n    ShowQuestionsAnswer,\n    sidebardashboard,.\n  },\n  data() {\n    return {\n      //visualizaciond de dashboard\n      role: \"\",\n      /* idUserLoged: \"\", */\n      username: \"\",\n\n      //ocultar barra de busqueda\n      hideSearchBar: true,\n\n      //Variable para interpolar los lenguages en la busqueda\n      languages: [],\n      //Variable estudiante\n      studentQuestions: [],\n      studentAnswers: [],\n      hideQuestion: false,\n      showQuestion: true,\n      noQuestions: false,\n      count: \"\",\n\n      //Variables de componente\n      title: \"\",\n      content: \"\",\n      idQuestion: \"\",\n\n      question: [],\n      questionsToExpert: [],\n      allQuestions: true,\n      //Variables resultado de la busqueda\n      showResultSearch: false,\n      questionsResultSearch: [],\n\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n      //TOKEN\n      token: \"\",\n    };\n  },\n  methods: {\n    //////////////////////////////////////////////////////\n    //ENPOINTS GENERALES\n    //OBTENGO EL ROL PARA SABER QUE LE VA A MOSTRAR AL USUARIO SEGUN SU ROL\n    async getRole(token) {\n      this.role = getRoleToken(this.token);\n\n      await this.getUserProfile();\n      //this.role = \"experto\";\n      if (this.role === \"estudiante\") {\n        await this.getStudentQuestions();\n      } else if (this.role === \"experto\") {\n        await this.getQuestionsToAnswer();\n      } else {\n        console.log(\"carga funcion de admin\");\n      }\n    },\n    //TRAIGO LA INFO DEL PERFIL DE USUARIO DE LA BBDD\n    async getUserProfile() {\n      try {\n        let userId = getIdToken(this.token);\n        const response = await axios.get(\n          ENDPOINT + \"/users/profile/\" + userId,\n          config\n        );\n\n        this.username = response.data.data.username;\n        this.avatar = process.env.VUE_APP_STATIC + response.data.data.avatar;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //RECIBO LOS PARAMETROS DE BUSQUEDA DESDE MI COMPONENTE\n    async collectParams(componentParams) {\n      this.successSearch = true;\n      this.showError = false;\n      this.queryParams = componentParams;\n      this.showQuestion = false;\n      await this.getQuestions();\n    },\n    //TRAER LOS LENGUAGES DE LA BBDD PARA EL SELECTOR DE LA BUSQUEDA AVANZADA\n    async getLanguages() {\n      try {\n        const response = await axios.get(ENDPOINT + \"/languages\");\n        this.languages = response.data.data;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    /* cancelEdition() {\n      this.allQuestions = true;\n    }, */\n    //////////////////////////////////////////////////////\n    //ENPOINTS PARA ESTUDIANTE\n    //TRAIGO TODAS LAS PREGUNTAS DE LA BBDD PARA HACER LA CONSULTA DE LA BUSQUEDA\n    async getQuestions() {\n      try {\n        const response = await axios.get(ENDPOINT + \"/questions\", {\n          params: this.queryParams,\n        });\n        this.questionsResultSearch = response.data.data;\n        this.showResultSearch = true;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n\n        if (\n          this.errorMessage === \"No hay preguntas que coincidan con tu busqueda\"\n        ) {\n          this.showResultSearch = false;\n        }\n      }\n    },\n    //DESDE LA BBDD\n    async getStudentQuestions() {\n      try {\n        const response = await axios.get(ENDPOINT + \"/my-questions\", config);\n\n        let resultNumber = response.data.resultAnswers;\n        if (resultNumber.length === 0) {\n          this.noQuestions = true;\n        } else {\n          this.studentQuestions = response.data.resultAnswers;\n        }\n        /*  if (response.data.resultAnswers[0].answer.length === 0) {\n          this.count = \"NO HAY RESPUESTAS AÚN\";\n        } else {\n          this.count = response.data.resultAnswers[0].answer.length;\n          this.studentAnswers = response.data.resultAnswers[0].answer;\n        } */\n      } catch (error) {\n        this.showError = true;\n        console.log(error);\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //DESDE EL COMPONENTE\n    getQuestionData(questionData) {\n      this.hideQuestion = true;\n      this.showQuestion = false;\n      this.title = questionData.title;\n      this.content = questionData.question_text;\n      this.idQuestion = questionData.id;\n    },\n    //DESDE LA VISTA\n    cancelEdition() {\n      this.title = \"\";\n      this.content = \"\";\n      this.hideQuestion = false;\n      this.showQuestion = true;\n      location.reload();\n    },\n    async saveEdition() {\n      //DATA\n      let data = {\n        title: this.title,\n        content: this.content,\n      };\n\n      try {\n        const response = await axios.put(\n          ENDPOINT + \"/edit-question/\" + this.idQuestion,\n          data,\n          config\n        );\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n\n      //ALERT DE EDITAR\n      alertFunction(\n        \"success\",\n        \"Actualizado\",\n        `Has editado tu pregunta exitosamente`\n      );\n      setTimeout(function () {\n        location.reload();\n      }, 1000);\n    },\n    async deleteQuestion() {\n      try {\n        const response = await axios.delete(\n          ENDPOINT + \"/delete-question/\" + this.idQuestion,\n          config\n        );\n        alertFunction(\"Borrada!\", \"Tu pregunta ha sido borrada.\", \"success\");\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //////////////////////////////////////////////////////\n    //ENPOINTS PARA EXPERTO\n    //TRAIGO LAS PREGUNTAS QUE PUEDE RESPONDER EL EXPERTO\n    async getQuestionsToAnswer() {\n      try {\n        const response = await axios.get(\n          ENDPOINT + \"/questions/to-answer\",\n          config\n        );\n        this.questionsToExpert = response.data.data;\n      } catch (error) {\n        console.log(error);\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    async getQuestion(id) {\n      this.hideSearchBar = false;\n      try {\n        const response = await axios.get(ENDPOINT + \"/question/\" + id, config);\n        this.question.push(response.data.data);\n        this.allQuestions = false;\n        this.idQuestion = id;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    async publishAnswer(data) {\n      try {\n        const response = await axios.post(\n          ENDPOINT + \"/new-answer/\" + this.idQuestion,\n          data,\n          config\n        );\n        alertFunction(\n          \"success\",\n          \"HAS RESPONDIDO\",\n          \"Tu respuesta se ha publicado correctamente\"\n        );\n        this.$router.push(\"/UserAnswers\");\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  async created() {\n    this.token = getAuthToken();\n    await this.getRole(this.token);\n    await this.getLanguages();\n  },\n};\n</script>\n\n<style scoped>\n.mainView h3 {\n  margin-top: 2rem;\n}\n.searchResult {\n  margin: 2rem 0;\n}\n.dashHomeContent {\n  margin: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  align-content: space-between;\n}\n#searchContainer {\n  background-color: var(--ligthBlue);\n  padding: 1rem;\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n}\nh3,\n#searchContainer h1 {\n  text-align: left;\n  margin: 0.5rem;\n}\n\n#searchContainer .search {\n  width: 100%;\n}\n\n@media only screen and (min-width: 600px) {\n  #searchContainer {\n    width: 90%;\n  }\n  .mainView {\n    width: 95%;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .mainView {\n    margin: 0;\n    width: 100%;\n  }\n  .searchResult {\n    margin: 2rem 0;\n  }\n  .dashHomeContent {\n    margin: 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    align-content: flex-start;\n  }\n  #searchContainer {\n    padding: 2rem;\n    max-width: 60vw;\n  }\n  h3,\n  #searchContainer h1 {\n    text-align: left;\n    margin: 0.5rem 0;\n  }\n}\n</style>\n"]}]}