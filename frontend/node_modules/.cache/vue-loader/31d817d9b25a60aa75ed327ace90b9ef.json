{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/UserAnswers.vue?vue&type=style&index=0&id=6f4e8ce0&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/UserAnswers.vue","mtime":1599157819000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiAuYW5zd2Vyc0NvbnRhaW5lciB7CiAgbWFyZ2luOiAxcmVtOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYmFja2dyb3VuZC1jb2xvcjogZG9kZ2VyYmx1ZTsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDBweCkgewp9CkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7CiAgLmRhc2hIb21lQ29udGVudCB7CiAgICBtYXJnaW46IDJyZW07CiAgICBtYXgtd2lkdGg6IDY1dnc7CiAgfQogIC5hbnN3ZXJzQ29udGFpbmVyIHsKICAgIG1hcmdpbi1ib3R0b206IDNyZW07CiAgfQp9ICovCg=="},{"version":3,"sources":["UserAnswers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserAnswers.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <span id=\"sectionTitle\">\n      <h1>Tus respuestas</h1>\n      <h2>Aqu√≠ puedes ver las respuestas que has realizado</h2>\n    </span>\n    <p v-show=\"showError\">{{ errorMessage }}</p>\n    <answercomponent\n      :answers=\"bbddAnswers\"\n      v-on:editedAnswer=\"postEditedAnswer\"\n      v-on:deleteAnswer=\"deleteAnswer\"\n    />\n  </div>\n</template>\n\n<script>\n//STORAGE DE LOS DATOS DE USUARIO\nimport userData from \"@/dataStorage/userData\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  config,\n  ENDPOINT,\n} from \"../utils/helpers\";\n\nimport answercomponent from \"@/components/AnswerComponent.vue\";\n\nexport default {\n  name: \"UserAnswers\",\n  components: {\n    answercomponent,\n  },\n  data() {\n    return {\n      //Variable de vista\n      bbddAnswers: [],\n\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n\n      sharedStore: userData.state,\n    };\n  },\n  computed: {\n    token() {\n      return this.sharedStore.token;\n    },\n    route() {\n      return this.$route.name;\n    },\n  },\n  methods: {\n    //TRAER RESPUESTAS HECHAS POR EL USUARIO DESDE LA BBDD\n    async getAnswers() {\n      try {\n        const response = await axios.get(ENDPOINT + \"/answer\", {\n          headers: {\n            Authorization: this.token,\n          },\n        });\n        this.bbddAnswers = response.data.data;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    async postEditedAnswer(componentData) {\n      try {\n        let data = {\n          content: componentData.currentAnswer,\n        };\n\n        const response = await axios.put(\n          ENDPOINT + \"/edit-answer/\" + componentData.id,\n          data,\n          config\n        );\n\n        alertFunction(\"success\", \"Editada!\", \"Tu respuesta ha sido editada.\");\n        //location.reload();\n        await this.getAnswers();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    async deleteAnswer(idAnswer) {\n      try {\n        const response = await axios.delete(\n          ENDPOINT + \"/delete-answer/\" + idAnswer,\n          config\n        );\n\n        alertFunction(\"success\", \"Borrada!\", \"Tu respuesta ha sido borrada.\");\n\n        location.reload();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  created() {\n    this.getAnswers();\n  },\n};\n</script>\n\n<style scoped>\n/* .answersContainer {\n  margin: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  align-content: space-between;\n  background-color: dodgerblue;\n}\n\n@media only screen and (min-width: 600px) {\n}\n@media only screen and (min-width: 1200px) {\n  .dashHomeContent {\n    margin: 2rem;\n    max-width: 65vw;\n  }\n  .answersContainer {\n    margin-bottom: 3rem;\n  }\n} */\n</style>\n"]}]}