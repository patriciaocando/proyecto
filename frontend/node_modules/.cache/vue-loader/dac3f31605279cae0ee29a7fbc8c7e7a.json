{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue?vue&type=style&index=0&id=4e9db972&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue","mtime":1598266591776},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5xdWVzdGlvbkFuc3dlckNvbnRhaW5lciB7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlndGhDb2xvcik7CiAgbWFyZ2luLWJvdHRvbTogMS41cmVtOwogIHBhZGRpbmctYm90dG9tOiAxLjVyZW07Cn0KCi5oaWRlQnV0dG9uIHsKICBkaXNwbGF5OiBub25lOwp9CgouaGlkZVF1ZXN0aW9uIHsKICBkaXNwbGF5OiBub25lOwp9CgouYW5zd2VyTWV0YSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBzcGFjZS1hcm91bmQ7CiAgbWFyZ2luOiAwIDAgMS41cmVtIDA7Cn0KCiNidXR0b25BbnN3ZXIgewogIG1hcmdpbjogMCAxLjVyZW07Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIHsKICAuYW5zd2VyTWV0YSB7CiAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogICAgbWFyZ2luLWJvdHRvbTogMXJlbTsKICB9Cn0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHsKICAuYW5zd2VyTWV0YSB7CiAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICAgIG1hcmdpbi1ib3R0b206IDJyZW07CiAgfQp9Cg=="},{"version":3,"sources":["GetQuestions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GetQuestions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"questionAnswerContainer\" v-for=\"(question, index) in questions\" :key=\"question.id\">\n      <question :question=\"question\" :route=\"route\" @editquestion=\"editQuestionId\" />\n\n      <span class=\"answerMeta\">\n        <button\n          id=\"buttonAnswer\"\n          v-show=\"isUser\"\n          :class=\"{ hideButton: question.answers <= 0 }\"\n          @click=\"sendQuestionId(question.id, index)\"\n        >{{buttonText}}</button>\n      </span>\n\n      <!--MOSTRAR LAS RESPUESTAS-->\n\n      <getanswer\n        v-show=\"hideAnswer\"\n        class=\"answerContent\"\n        v-if=\"index === answer\"\n        :answers=\"answers\"\n        v-on:newVote=\"getRating\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getAuthToken } from \"../utils/helpers\";\nimport { format, formatDistance } from \"date-fns\";\nimport es from \"date-fns/locale/es\";\n\nimport question from \"@/components/Question.vue\";\nimport getanswer from \"@/components/GetAnswer.vue\";\n\nexport default {\n  name: \"ShowQuestions\",\n  components: {\n    getanswer,\n    question,\n  },\n  props: {\n    questions: Array,\n    answers: Array,\n  },\n  data() {\n    return {\n      idQuestion: 2,\n      hideAnswers: true,\n      seeAnswersButton: false,\n      hideAnswer: true,\n      //variable para ocultar boton si no esta autenticado el usuario\n      isUser: \"\",\n\n      //Variable para saber el indice de la pregunta de la que se desea ver la respuesta\n      answer: \"\",\n      buttonText: \"VER RESPUESTAS\",\n      //route\n      route: \"\",\n\n      //TOKEN\n      token: \"\",\n    };\n  },\n  computed: {},\n\n  methods: {\n    getRating(data) {\n      this.$emit(\"rateAnswer\", data);\n    },\n    async getAutentication(token) {\n      if (token === null) {\n        this.isUser = false;\n      } else {\n        this.isUser = true;\n      }\n    },\n    editQuestionId(id) {\n      this.$emit(\"editquestion\", id);\n    },\n    sendQuestionId(id, index) {\n      //this.hideAnswer = !this.hideAnswer;\n      this.answer = index;\n      if (this.hideAnswer === false) {\n        this.buttonText = \"OCULTAR RESPUESTAS\";\n      } else {\n        this.buttonText = \"VER RESPUESTAS\";\n      }\n      this.hideAnswer = !this.hideAnswer;\n\n      this.$emit(\"showAnswers\", id);\n    },\n\n    sendSearchParams() {\n      let params = {\n        name: this.autor,\n        direction: this.order,\n        search: this.search,\n        language: this.language,\n        date_init: this.dateInit,\n        date_end: this.dateEnd,\n        status: this.status,\n      };\n    },\n    showFilter() {\n      if (this.filter) {\n        this.filter = false;\n      } else {\n        this.filter = true;\n      }\n    },\n  },\n  async created() {\n    this.token = getAuthToken();\n    await this.getAutentication(this.token);\n    this.route = this.$route.name;\n  },\n};\n</script>\n\n<style scoped>\n.questionAnswerContainer {\n  background-color: var(--ligthColor);\n  margin-bottom: 1.5rem;\n  padding-bottom: 1.5rem;\n}\n\n.hideButton {\n  display: none;\n}\n\n.hideQuestion {\n  display: none;\n}\n\n.answerMeta {\n  display: flex;\n  flex-direction: column;\n  align-items: space-around;\n  margin: 0 0 1.5rem 0;\n}\n\n#buttonAnswer {\n  margin: 0 1.5rem;\n}\n\n@media only screen and (min-width: 600px) {\n  .answerMeta {\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-bottom: 1rem;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .answerMeta {\n    flex-direction: row;\n    justify-content: flex-end;\n    margin-bottom: 2rem;\n  }\n}\n</style>\n"]}]}