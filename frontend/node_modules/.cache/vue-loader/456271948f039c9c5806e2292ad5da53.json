{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/Question.vue?vue&type=style&index=0&id=1d8df916&scoped=true&lang=css&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/Question.vue","mtime":1599122602731},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhpZGVCdXR0b24gewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5xdWVzdGlvbkVkaXQgewogIHBhZGRpbmc6IDJyZW0gMCAycmVtIDJyZW07Cn0KCi5xdWVzdGlvbkluZm8gewogIHRleHQtYWxpZ246IGxlZnQ7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlndGhDb2xvcik7CiAgcGFkZGluZzogMnJlbSAycmVtIDAgMnJlbTsKICBib3JkZXItcmFkaXVzOiAwLjVyZW07CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogc3RyZXRjaDsKfQoKLmxlbmd0aFR4dCB7CiAgd29yZC1icmVhazogYnJlYWstd29yZDsKfQoKLm51bWJlclF1ZXN0aW9ucyB7CiAgY29sb3I6IHZhcigtLWJsdWUpOwp9CgouZGF0YU1ldGEgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsKICBtYXJnaW46IDAuNXJlbSAwOwp9CgouYXV0b3JJbmZvIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDsKICBtYXJnaW4tYm90dG9tOiAxcmVtOwp9CgouYW5zd2VyTWV0YSB7CiAgbWFyZ2luOiAycmVtIDAgMDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24tY29udGVudDogY2VudGVyOwp9CgpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMHB4KSB7CiAgLmRhdGFNZXRhIHsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogIH0KICAuYnV0dG9uc0luc2lkZUNvbnRhaW5lciB7CiAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAgZmxleC13cmFwOiB3cmFwOwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7CiAgfQoKICAuYnV0dG9uc0NvbnRhaW5lciB7CiAgICBtYXJnaW46IDA7CiAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICB9CiAgLmRlbGV0ZUJ1dHRvbiB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzJSA1MCU7CiAgICBmbGV4LWdyb3c6IDE7CiAgfQp9CgpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkgewogIC5idXR0b25zQ29udGFpbmVyIHsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICB3aWR0aDogOTUlOwogIH0KICAuZGVsZXRlQnV0dG9uIHsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IDElIDUwJTsKICAgIHBhZGRpbmc6IDJyZW07CiAgICBmbGV4LWdyb3c6IDA7CiAgfQogIC5lZGl0QnV0dG9uIHsKICAgIGZsZXgtZ3JvdzogMTsKICB9Cn0K"},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"questionInfo\" v-if=\"!isEdited\">\n      <div class=\"autorInfo\">\n        <span class=\"autorInfo\">\n          <img class=\"avatar\" :src=\"getImageName(question.avatar)\" />\n          <p>{{ question.name_user }}</p>\n        </span>\n        <div v-if=\"route === 'UserQuestions'\">\n          <!--  <button id=\"editButton\" @click=\"$emit('editquestion', question.id)\">Editar pregunta</button> -->\n          <button id=\"editButton\" @click=\"editquestion()\">Editar pregunta</button>\n        </div>\n      </div>\n      <h3>{{ question.title }}</h3>\n\n      <!--METADATA FECHA-->\n      <span class=\"dataMeta\">\n        <p class=\"accesibilityTxt\">\n          Formulada: {{ question.date | getFormat }} | Hace:\n          {{ question.date | getDistance }}\n        </p>\n        <p\n          :class=\"'languageStyle ' + question.name_language.toLowerCase()\"\n        >{{ question.name_language }}</p>\n      </span>\n      <!--CONTENIDO PREGUNTA-->\n      <p class=\"lengthTxt\">{{ question.question_text }}</p>\n\n      <!--METADATA RESPUESTAS-->\n      <div class=\"answerMeta\">\n        <h3>\n          RESPUESTAS\n          <b class=\"numberQuestions\">{{ question.answers }}</b>\n        </h3>\n        <!--    && route !== 'Dashboard' -->\n\n        <button\n          v-show=\"isUser\"\n          v-if=\"route !== 'UserAnswers' \"\n          :class=\"{ hideButton: question.answers <= 0 }\"\n          @click=\"sendQuestionId(question.id)\"\n        >{{ buttonText }}</button>\n      </div>\n    </div>\n    <!--EDITAR PREGUNTA-->\n    <div class=\"questionEdit\" v-if=\"isEdited\">\n      <h3>TITULO:</h3>\n      <input class=\"titleInput\" type=\"text\" :placeholder=\"title\" v-model=\"title\" />\n      <textarea type=\"text\" name=\"textQuestion\" rows=\"4\" :placeholder=\"content\" v-model=\"content\"></textarea>\n\n      <div class=\"buttonsContainer\">\n        <button class=\"deleteButton\" @click=\"questionDeleted(question.id)\">Borrar pregunta</button>\n        <div class=\"buttonsInsideContainer\">\n          <button @click=\"saveEdition(question.id)\">GUARDAR</button>\n          <button class=\"cancelButton\" @click=\"cancelEdition()\">CANCELAR</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport userData from \"@/dataStorage/userData\";\nimport api from \"@/api/api.js\";\n\nexport default {\n  name: \"Question\",\n  props: {\n    question: Object,\n    route: String,\n    index: Number,\n  },\n  data() {\n    return {\n      //store del usuario\n      sharedStore: userData.state,\n      buttonText: \"VER RESPUESTAS\",\n\n      //Variables de la pregunta que se debe editar\n      title: \"\",\n      content: \"\",\n      idQuestion: \"\",\n\n      isEdited: false,\n    };\n  },\n  computed: {\n    isUser() {\n      return this.sharedStore.isLogged;\n    },\n  },\n  methods: {\n    getImageName(name) {\n      return process.env.VUE_APP_STATIC + name;\n    },\n    sendQuestionId(id) {\n      let data = {\n        id,\n        index: this.index,\n      };\n\n      if (this.buttonText === \"OCULTAR RESPUESTAS\") {\n        this.buttonText = \"VER RESPUESTAS\";\n      } else {\n        this.buttonText = \"OCULTAR RESPUESTAS\";\n      }\n\n      this.$emit(\"showmethsanswer\", data);\n    },\n    editquestion() {\n      this.isEdited = true;\n      this.title = this.question.title;\n      this.content = this.question.question_text;\n    },\n    cancelEdition() {\n      this.title = \"\";\n      this.content = \"\";\n      this.isEdited = false;\n    },\n    async saveEdition(idQuestion) {\n      try {\n        //DATA\n        let data = {\n          title: this.title,\n          content: this.content,\n        };\n        const response = await api.editQuestion(idQuestion, data);\n        this.isEdited = false;\n        this.$emit(\"questionEdited\");\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async questionDeleted(idQuestion) {\n      try {\n        const response = await api.deleteQuestion(idQuestion);\n        this.$emit(\"questionDeleted\");\n        this.hideQuestion = false;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  created() {\n    this.buttonText = this.buttonText;\n  },\n};\n</script>\n\n<style scoped>\n.hideButton {\n  display: none;\n}\n\n.questionEdit {\n  padding: 2rem 0 2rem 2rem;\n}\n\n.questionInfo {\n  text-align: left;\n  background-color: var(--ligthColor);\n  padding: 2rem 2rem 0 2rem;\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n}\n\n.lengthTxt {\n  word-break: break-word;\n}\n\n.numberQuestions {\n  color: var(--blue);\n}\n\n.dataMeta {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0.5rem 0;\n}\n\n.autorInfo {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  align-content: flex-start;\n  margin-bottom: 1rem;\n}\n\n.answerMeta {\n  margin: 2rem 0 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  align-content: center;\n}\n\n@media only screen and (min-width: 600px) {\n  .dataMeta {\n    flex-direction: row;\n    align-items: center;\n  }\n  .buttonsInsideContainer {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n\n  .buttonsContainer {\n    margin: 0;\n    flex-direction: row;\n    align-items: center;\n  }\n  .deleteButton {\n    background-position: 3% 50%;\n    flex-grow: 1;\n  }\n}\n\n@media only screen and (min-width: 1200px) {\n  .buttonsContainer {\n    align-items: center;\n    justify-content: space-between;\n    width: 95%;\n  }\n  .deleteButton {\n    background-position: 1% 50%;\n    padding: 2rem;\n    flex-grow: 0;\n  }\n  .editButton {\n    flex-grow: 1;\n  }\n}\n</style>\n"]}]}