{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Profile.vue","mtime":1597080115736},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3BhdHJpY2lhL2hhY2thYm9zcy9QUk9ZRUNUTy9mcm9udGVuZC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IHsgZ2V0QXV0aFRva2VuLCBnZXRJZFRva2VuLCBhbGVydEZ1bmN0aW9uLCBnZXRSb2xlVG9rZW4sIGNvbmZpZywgRU5EUE9JTlQgfSBmcm9tICIuLi91dGlscy9oZWxwZXJzIjsKaW1wb3J0IHVzZXJwcm9maWxlIGZyb20gIkAvY29tcG9uZW50cy9Vc2VyUHJvZmlsZS52dWUiOwppbXBvcnQgY2hhbmdlcGFzc3dvcmQgZnJvbSAiQC9jb21wb25lbnRzL0NoYW5nZVBhc3N3b3JkLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvZmlsZSIsCiAgY29tcG9uZW50czogewogICAgdXNlcnByb2ZpbGU6IHVzZXJwcm9maWxlLAogICAgY2hhbmdlcGFzc3dvcmQ6IGNoYW5nZXBhc3N3b3JkCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy92YXJpYWJsZXMgZGUgdmlzdGEKICAgICAgcHJvZmlsZToge30sCiAgICAgIHVzZXJMYW5ndWFnZXM6IFtdLAogICAgICB1c2VyUm9sZTogIiIsCiAgICAgIGFjdHVhbFBhc3N3b3JkOiAiIiwKICAgICAgLy92YXJpYWJsZXMgZGUgZ2VzdGlvbiBkZSBlcnJvcmVzCiAgICAgIHNob3dFcnJvcjogZmFsc2UsCiAgICAgIGVycm9yTWVzc2FnZTogIiIsCiAgICAgIC8vVE9LRU4KICAgICAgdG9rZW46IGdldEF1dGhUb2tlbigpCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlVXNlckRhdGE6IGZ1bmN0aW9uIHVwZGF0ZVVzZXJEYXRhKHVzZXJEYXRhKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBmb3JtRGF0YSwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsgLy9EQVRPUyBERUwgVVNVQVJJTyBRVUUgUkVDSUJPIERFU0RFIEVMIENPTVBPTkVOVEUKCiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoIm5hbWUiLCB1c2VyRGF0YS5uYW1lKTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgibGFzdF9uYW1lIiwgdXNlckRhdGEubGFzdG5hbWUpOwogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCJ1c2VybmFtZSIsIHVzZXJEYXRhLnVzZXJuYW1lKTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZW1haWwiLCB1c2VyRGF0YS5lbWFpbCk7CiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoInByb2ZpbGVfYmlvIiwgdXNlckRhdGEucHJvZmlsZSk7CiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoImF2YXRhciIsIHVzZXJEYXRhLmF2YXRhcik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQoRU5EUE9JTlQgKyAiL3VzZXJzL2VkaXQtcHJvZmlsZS8iICsgX3RoaXMudXNlcklkLCBmb3JtRGF0YSwgY29uZmlnLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcjogewogICAgICAgICAgICAgICAgICAgICJDb250ZW50LXR5cGUiOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICByZXR1cm4gYWxlcnRGdW5jdGlvbigic3VjY2VzcyIsICJBY3R1YWxpemFkbyIsICJIYXMgZWRpdGFkbyBsb3MgZGF0b3MgZGUgIi5jb25jYXQodXNlckRhdGEudXNlcm5hbWUsICIgZXhpdG9zYW1lbnRlIikpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oNyk7CiAgICAgICAgICAgICAgICBfdGhpcy5zaG93RXJyb3IgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXMuZXJyb3JNZXNzYWdlID0gX2NvbnRleHQudDAucmVzcG9uc2UuZGF0YS5tZXNzYWdlOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s3LCAxNl1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy9UUkFJR08gTEEgSU5GTyBERUwgUEVSRklMIERFIFVTVUFSSU8gREUgTEEgQkJERAogICAgZ2V0VXNlclByb2ZpbGU6IGZ1bmN0aW9uIGdldFVzZXJQcm9maWxlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX3RoaXMyLnVzZXJJZCA9IGdldElkVG9rZW4oX3RoaXMyLnRva2VuKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoRU5EUE9JTlQgKyAiL3VzZXJzL3Byb2ZpbGUvIiArIF90aGlzMi51c2VySWQsIGNvbmZpZyk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpczIucHJvZmlsZSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMi5wcm9maWxlLmF2YXRhciA9IHByb2Nlc3MuZW52LlZVRV9BUFBfU1RBVElDICsgX3RoaXMyLnByb2ZpbGUuYXZhdGFyOwogICAgICAgICAgICAgICAgX3RoaXMyLmFjdHVhbFBhc3N3b3JkID0gcmVzcG9uc2UuZGF0YS5kYXRhLnBhc3N3b3JkOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIF90aGlzMi5zaG93RXJyb3IgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXMyLmVycm9yTWVzc2FnZSA9IF9jb250ZXh0Mi50MC5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vQ0FNQklPIERFIENPTlRSQVNFw5FBIEVOIExBIEJCREQKICAgIHBvc3ROZXdQYXNzd29yZDogZnVuY3Rpb24gcG9zdE5ld1Bhc3N3b3JkKGRhdGEpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoRU5EUE9JTlQgKyAiL3VzZXJzLyIuY29uY2F0KF90aGlzMy51c2VySWQsICIvcGFzc3dvcmQiKSwgZGF0YSwgY29uZmlnKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIGFsZXJ0RnVuY3Rpb24oInN1Y2Nlc3MiLCAiTlVFVkEgQ09OVFJBU0XDkUEiLCAiSGFzIGFjdHVhbGl6YWRvIHR1IGNvbnRhc2XDsWEgY29uIMOpeGl0bywgaGF6IExvZ2luIGRlIG51ZXZvIik7CgogICAgICAgICAgICAgICAgX3RoaXMzLiRyb3V0ZXIucHVzaCgiL2xvZ2luIik7CgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDMudDApOwogICAgICAgICAgICAgICAgX3RoaXMzLnNob3dFcnJvciA9IHRydWU7CiAgICAgICAgICAgICAgICBfdGhpczMuZXJyb3JNZXNzYWdlID0gX2NvbnRleHQzLnQwLnJlc3BvbnNlLmRhdGEubWVzc2FnZTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFVzZXJQcm9maWxlKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!--DATOS DE USUARIO-->\n    <div>\n      <userprofile v-on:iduserupdate=\"updateUserData\" :userdata=\"profile\" />\n    </div>\n    <p v-show=\"showError\">{{ errorMessage }}</p>\n    <!--CAMBIO DE CONTRASEÑA-->\n    <div>\n      <changepassword :actualPassword=\"actualPassword\" v-on:changePassword=\"postNewPassword\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  getRoleToken,\n  config,\n  ENDPOINT,\n} from \"../utils/helpers\";\n\nimport userprofile from \"@/components/UserProfile.vue\";\nimport changepassword from \"@/components/ChangePassword.vue\";\n\nexport default {\n  name: \"Profile\",\n  components: {\n    userprofile,\n    changepassword,\n  },\n\n  data() {\n    return {\n      //variables de vista\n      profile: {},\n      userLanguages: [],\n      userRole: \"\",\n      actualPassword: \"\",\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n\n      //TOKEN\n      token: getAuthToken(),\n    };\n  },\n\n  methods: {\n    async updateUserData(userData) {\n      let formData = new FormData();\n      //DATOS DEL USUARIO QUE RECIBO DESDE EL COMPONENTE\n      formData.append(\"name\", userData.name);\n      formData.append(\"last_name\", userData.lastname);\n      formData.append(\"username\", userData.username);\n      formData.append(\"email\", userData.email);\n      formData.append(\"profile_bio\", userData.profile);\n      formData.append(\"avatar\", userData.avatar);\n\n      try {\n        const response = await axios.put(\n          ENDPOINT + \"/users/edit-profile/\" + this.userId,\n          formData,\n          config,\n          { header: { \"Content-type\": \"multipart/form-data\" } }\n        );\n        //ALERT DE EDITAR\n        await alertFunction(\n          \"success\",\n          \"Actualizado\",\n          `Has editado los datos de ${userData.username} exitosamente`\n        );\n        location.reload();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //TRAIGO LA INFO DEL PERFIL DE USUARIO DE LA BBDD\n    async getUserProfile() {\n      try {\n        this.userId = getIdToken(this.token);\n        const response = await axios.get(\n          ENDPOINT + \"/users/profile/\" + this.userId,\n          config\n        );\n        this.profile = response.data.data;\n        this.profile.avatar = process.env.VUE_APP_STATIC + this.profile.avatar;\n        this.actualPassword = response.data.data.password;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //CAMBIO DE CONTRASEÑA EN LA BBDD\n    async postNewPassword(data) {\n      try {\n        console.log(data);\n        const response = await axios.post(\n          ENDPOINT + `/users/${this.userId}/password`,\n          data,\n          config\n        );\n        alertFunction(\n          \"success\",\n          \"NUEVA CONTRASEÑA\",\n          \"Has actualizado tu contaseña con éxito, haz Login de nuevo\"\n        );\n        this.$router.push(\"/login\");\n      } catch (error) {\n        console.log(error);\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  created() {\n    this.getUserProfile();\n  },\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/views"}]}