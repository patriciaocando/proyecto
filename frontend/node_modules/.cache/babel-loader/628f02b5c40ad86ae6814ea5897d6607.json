{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/ExpertLanguages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/ExpertLanguages.vue","mtime":1596745179861},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ExpertLanguages.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h3>LENGUAJES ASOCIADOS:</h3>\n    <div v-for=\"language in userLanguages\" :key=\"language.id\">\n      <img class=\"languageImage\" :src=\"getImageName(language.image)\" />\n      <p>{{language.language}}</p>\n      <p>{{language.description}}</p>\n      <button @click=\"deleteUserLanguage(language.id)\">Borrar lenguaje</button>\n    </div>\n    <p v-show=\"showError\">{{ errorMessage }}</p>\n    <div>\n      <h3>TODOS LOS LENGUAJES:</h3>\n      <div v-for=\"languages in bbddLanguages\" :key=\"languages.id\">\n        <img class=\"languageImage\" :src=\"getImageName(languages.image)\" />\n        <p>{{languages.language}}</p>\n        <p>{{languages.description}}</p>\n        <button @click=\"addLanguage()\">ASOCIAR A LENGUAJE</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  getRoleToken,\n  config,\n} from \"../utils/helpers\";\nexport default {\n  name: \"ExpertLanguages\",\n\n  data() {\n    return {\n      userLanguages: [],\n      bbddLanguages: [],\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n      userRole: \"\",\n      //TOKEN\n      token: getAuthToken(),\n    };\n  },\n\n  methods: {\n    getImageName(name) {\n      let url = process.env.VUE_APP_STATIC;\n      return url + name;\n    },\n    //TRAER LOS LENGUAJES ASOCIADOS A UN EXPERTO\n    async getUserLanguages() {\n      this.userRole = getRoleToken(this.token);\n\n      if (this.userRole === \"experto\") {\n        try {\n          const response = await axios.get(\n            \"http://localhost:3000/expert/languages\",\n            config\n          );\n\n          this.userLanguages = response.data.data;\n        } catch (error) {\n          this.showError = true;\n          this.errorMessage = error.response.data.message;\n        }\n      }\n    },\n    //TRAER LOS LENGUAGES DE LA BBDD\n    async getLanguages() {\n      try {\n        await this.getUserLanguages();\n        const response = await axios.get(\"http://localhost:3000/languages\");\n        this.bbddLanguages = response.data.data;\n\n        for (const language of this.userLanguages) {\n          for (const [index, bbddlanguageAux] of this.bbddLanguages.entries()) {\n            if (language.id === bbddlanguageAux.id) {\n              this.bbddLanguages.splice(index, 1);\n            }\n          }\n        }\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //BORRAR LENGUAJE DE UN EXPERTO\n    async deleteUserLanguage(languageId) {\n      try {\n        const response = await axios.delete(\n          \"http://localhost:3000/users/delete-language/\" + languageId,\n          config\n        );\n        console.log(id);\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //ASOCIAR UN NUEVO LENGUAJE\n    async addLanguage(langageId) {\n      try {\n        //CABECERA DE AUTORIZACION\n        let config = {\n          headers: {\n            Authorization: this.token,\n          },\n        };\n        const response = await axios.put(\n          \"http://localhost:3000/users/add-language\"\n        );\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  created() {\n    this.getLanguages();\n  },\n};\n</script>\n\n<style scoped>\n.languageImage {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n}\n</style>"],"sourceRoot":"src/views"}]}