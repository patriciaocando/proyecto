{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/UserQuestions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/UserQuestions.vue","mtime":1598218134533},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserQuestions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AACA,OAAA,aAAA,MAAA,+BAAA;AAEA,SACA,YADA,EAEA,UAFA,EAGA,aAHA,EAIA,MAJA,EAKA,QALA,QAMA,kBANA;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA,KAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA,MAAA,WAAA,EAAA,KANA;AAOA,MAAA,KAAA,EAAA,EAPA;AASA;AACA,MAAA,SAAA,EAAA,KAVA;AAWA,MAAA,YAAA,EAAA,EAXA;AAaA;AACA,MAAA,KAAA,EAAA,EAdA;AAeA,MAAA,OAAA,EAAA,EAfA;AAgBA,MAAA,UAAA,EAAA;AAhBA,KAAA;AAkBA,GArBA;AAsBA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,aAAA,EAAA;AAFA,GAtBA;AA2BA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA,2BAEA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAPA;AAQA;AACA,IAAA,iBATA,+BASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,GAAA,CAAA,QAAA,GAAA,eAAA,EAAA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,EAAA,YAAA;AADA;AADA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAQA,gBAAA,YARA,GAQA,QAAA,CAAA,IAAA,CAAA,IARA;;AASA,oBAAA,YAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,kBAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AACA,iBAFA,MAEA;AACA,kBAAA,KAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AAbA;AAAA;;AAAA;AAAA;AAAA;AAeA,gBAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,YAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,KA3BA;AA4BA;AACA,IAAA,UA7BA,sBA6BA,UA7BA,EA6BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,GAAA,CACA,QAAA,GAAA,UAAA,GAAA,UADA,EAEA,MAFA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAMA,gBAAA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AANA;AAAA;;AAAA;AAAA;AAAA;AAQA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,aAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAxCA;AAyCA;AACA,IAAA,UA1CA,sBA0CA,IA1CA,EA0CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MADA,GACA;AACA,kBAAA,MAAA,EAAA,IAAA,CAAA;AADA,iBADA;AAAA;AAAA;AAAA,uBAMA,KAAA,CAAA,IAAA,CACA,QAAA,GAAA,iBAAA,GAAA,IAAA,CAAA,EADA,EAEA,MAFA,EAGA,MAHA,CANA;;AAAA;AAMA,gBAAA,QANA;AAWA,gBAAA,aAAA,CACA,SADA,EAEA,SAFA,+BAGA,IAAA,CAAA,MAHA,cAAA;AAXA;AAAA;;AAAA;AAAA;AAAA;AAiBA,gBAAA,MAAA,CAAA,YAAA,GAAA,aAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AAjBA;AAAA,uBAkBA,aAAA,CAAA,OAAA,EAAA,OAAA,iCAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA,KA9DA;AAgEA;AACA,IAAA,eAjEA,2BAiEA,EAjEA,EAiEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,IAAA;AADA;AAAA;AAAA,uBAIA,KAAA,CAAA,GAAA,CAAA,QAAA,GAAA,YAAA,GAAA,EAAA,EAAA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,EAAA,YAAA;AADA;AADA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,QAJA;AAUA,gBAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AACA,gBAAA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,aAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AAZA;AAAA;;AAAA;AAAA;AAAA;AAcA,gBAAA,OAAA,CAAA,KAAA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,KAjFA;AAmFA,IAAA,WAnFA,yBAmFA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,IAFA,GAEA;AACA,kBAAA,KAAA,EAAA,MAAA,CAAA,KADA;AAEA,kBAAA,OAAA,EAAA,MAAA,CAAA;AAFA,iBAFA;AAAA;AAAA;AAAA,uBAQA,KAAA,CAAA,GAAA,CACA,QAAA,GAAA,iBAAA,GAAA,MAAA,CAAA,UADA,EAEA,IAFA,EAGA,MAHA,CARA;;AAAA;AAQA,gBAAA,QARA;AAaA;AACA,gBAAA,aAAA,CACA,SADA,EAEA,aAFA,yCAAA;AAdA;AAAA,uBAmBA,MAAA,CAAA,iBAAA,EAnBA;;AAAA;AAoBA,gBAAA,MAAA,CAAA,YAAA,GAAA,KAAA;AApBA;AAAA;;AAAA;AAAA;AAAA;AAsBA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,aAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AAvBA;AA0BA;AACA,gBAAA,aAAA,CACA,SADA,EAEA,aAFA,yCAAA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA,KAnHA;AAoHA,IAAA,cApHA,4BAoHA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CACA,QAAA,GAAA,mBAAA,GAAA,MAAA,CAAA,UADA,EAEA,MAFA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAMA,gBAAA,aAAA,CAAA,UAAA,EAAA,8BAAA,EAAA,SAAA,CAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,KAAA;AAPA;AAAA,uBAQA,MAAA,CAAA,iBAAA,EARA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,aAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAjIA,GA3BA;AA8JA,EAAA,OA9JA,qBA8JA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,MAAA,CAAA,KAAA,GAAA,YAAA,EAAA;AADA;AAAA,qBAEA,MAAA,CAAA,iBAAA,EAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAjKA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <span id=\"sectionTitle\" v-show=\"!hideQuestion\">\n      <h1>Tus preguntas</h1>\n      <h2>Aquí puedes ver las preguntas que has realizado</h2>\n    </span>\n\n    <showquestions\n      id=\"questionsBody\"\n      v-if=\"!hideQuestion\"\n      :questions=\"questions\"\n      :answers=\"answers\"\n      @showAnswers=\"getAnswers\"\n      @rateAnswer=\"rateAnswer\"\n      @editquestion=\"getQuestionData\"\n    />\n\n    <div v-show=\"noQuestions\">\n      <p>Aww... aun no has preguntado nada aún</p>\n      <p>¿Quieres hacer una?</p>\n      <router-link :to=\"{ name: 'NewQuestion' }\">Hacer pregunta</router-link>\n    </div>\n\n    <!--EDITAR PREGUNTA-->\n    <div class=\"questionEdit\" v-if=\"hideQuestion\">\n      <h2>EDITAR PREGUNTA:</h2>\n\n      <h3>TITULO:</h3>\n      <input class=\"titleInput\" type=\"text\" :placeholder=\"title\" v-model=\"title\" />\n\n      <textarea type=\"text\" name=\"textQuestion\" rows=\"4\" :placeholder=\"content\" v-model=\"content\"></textarea>\n\n      <div class=\"buttonsContainer\">\n        <button class=\"deleteButton\" @click=\"deleteQuestion()\">Borrar pregunta</button>\n        <div class=\"buttonsInsideContainer\">\n          <button @click=\"saveEdition()\">GUARDAR</button>\n          <button class=\"cancelButton\" @click=\"cancelEdition()\">CANCELAR</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport question from \"@/components/Question.vue\";\nimport showquestions from \"@/components/GetQuestions.vue\";\n\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  config,\n  ENDPOINT,\n} from \"../utils/helpers\";\n\nexport default {\n  name: \"UserQuestions\",\n  data() {\n    return {\n      questions: [],\n      answers: [],\n      token: \"\",\n      hideQuestion: false,\n      showQuestion: true,\n      noQuestions: false,\n      count: \"\",\n\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n\n      //Variables de la pregunta que se debe editar\n      title: \"\",\n      content: \"\",\n      idQuestion: \"\",\n    };\n  },\n  components: {\n    question,\n    showquestions,\n  },\n\n  methods: {\n    //DESDE LA VISTA\n    cancelEdition() {\n      this.title = \"\";\n      this.content = \"\";\n      this.hideQuestion = false;\n      this.showQuestion = true;\n    },\n    //TRAER LAS PREGUNTAS QUE HA HECHO EL USUARIO DESDE LA BBDD\n    async getQuestionsAnwer() {\n      try {\n        const response = await axios.get(ENDPOINT + \"/my-questions\", {\n          headers: {\n            Authorization: getAuthToken(),\n          },\n        });\n\n        let resultNumber = response.data.data;\n        if (resultNumber.length === 0) {\n          this.noQuestions = true;\n        } else {\n          this.questions = response.data.data;\n        }\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //TRAER LAS RESPUESTA DE LA PREGUNTA SELECCIONADA SI ES USUARIO LOGUEADO\n    async getAnswers(idQuestion) {\n      try {\n        const response = await axios.get(\n          ENDPOINT + \"/answer/\" + idQuestion,\n          config\n        );\n        this.answers = response.data.data;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //VOTAR UNA RESPUESTA\n    async rateAnswer(data) {\n      let rating = {\n        rating: data.rating,\n      };\n\n      try {\n        const response = await axios.post(\n          ENDPOINT + \"/rating/answer/\" + data.id,\n          rating,\n          config\n        );\n        alertFunction(\n          \"success\",\n          \"Ranking\",\n          `¡Has Votado con ${data.rating} puntos!`\n        );\n      } catch (error) {\n        this.errorMessage = error.response.data.message;\n        await alertFunction(\"error\", \"Opss!\", `Ya has votado esta respuesta`);\n      }\n    },\n\n    //DESDE EL COMPONENTE\n    async getQuestionData(id) {\n      this.hideQuestion = true;\n\n      try {\n        const response = await axios.get(ENDPOINT + \"/question/\" + id, {\n          headers: {\n            Authorization: getAuthToken(),\n          },\n        });\n\n        this.title = response.data.data.title;\n        this.content = response.data.data.question_text;\n        this.idQuestion = id;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async saveEdition() {\n      //DATA\n      let data = {\n        title: this.title,\n        content: this.content,\n      };\n\n      try {\n        const response = await axios.put(\n          ENDPOINT + \"/edit-question/\" + this.idQuestion,\n          data,\n          config\n        );\n        //ALERT DE EDITAR\n        alertFunction(\n          \"success\",\n          \"Actualizado\",\n          `Has editado tu pregunta exitosamente`\n        );\n        await this.getQuestionsAnwer();\n        this.hideQuestion = false;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n\n      //ALERT DE EDITAR\n      alertFunction(\n        \"success\",\n        \"Actualizado\",\n        `Has editado tu pregunta exitosamente`\n      );\n    },\n    async deleteQuestion() {\n      try {\n        const response = await axios.delete(\n          ENDPOINT + \"/delete-question/\" + this.idQuestion,\n          config\n        );\n        alertFunction(\"Borrada!\", \"Tu pregunta ha sido borrada.\", \"success\");\n        this.hideQuestion = false;\n        await this.getQuestionsAnwer();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  async created() {\n    this.token = getAuthToken();\n    await this.getQuestionsAnwer();\n  },\n};\n</script>\n\n<style scoped>\n* {\n  text-align: left;\n  margin-bottom: 1rem;\n}\n\n.questionEdit {\n  /*  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 100%; */\n  background-color: var(--ligthColor);\n  padding: 2rem 0 2rem 2rem;\n  border-radius: 0.5rem;\n  -webkit-box-shadow: 0px 13px 14px -13px rgba(173, 173, 173, 0.64);\n  -moz-box-shadow: 0px 13px 14px -13px rgba(173, 173, 173, 0.64);\n  box-shadow: 0px 13px 14px -13px rgba(173, 173, 173, 0.64);\n}\n\ntextarea {\n  height: 20rem;\n}\n@media only screen and (min-width: 600px) {\n  .buttonsInsideContainer {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n\n  .buttonsContainer {\n    margin: 0;\n    flex-direction: row;\n    align-items: center;\n  }\n  .deleteButton {\n    background-position: 3% 50%;\n    flex-grow: 1;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .buttonsContainer {\n    align-items: center;\n    justify-content: space-between;\n    width: 95%;\n  }\n  .deleteButton {\n    background-position: 1% 50%;\n    padding: 2rem;\n    flex-grow: 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}