{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/Profile.vue","mtime":1596744317817},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3BhdHJpY2lhL2hhY2thYm9zcy9QUk9ZRUNUTy9mcm9udGVuZC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IHsgZ2V0QXV0aFRva2VuLCBnZXRJZFRva2VuLCBhbGVydEZ1bmN0aW9uLCBnZXRSb2xlVG9rZW4gfSBmcm9tICIuLi91dGlscy9oZWxwZXJzIjsKaW1wb3J0IHVzZXJwcm9maWxlIGZyb20gIkAvY29tcG9uZW50cy9Vc2VyUHJvZmlsZS52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlByb2ZpbGUiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL3ZhcmlhYmxlcyBkZSB2aXN0YQogICAgICBwcm9maWxlOiB7fSwKICAgICAgdXNlckxhbmd1YWdlczogW10sCiAgICAgIC8vdmFyaWFibGVzIGRlIGdlc3Rpb24gZGUgZXJyb3JlcwogICAgICBzaG93RXJyb3I6IGZhbHNlLAogICAgICBlcnJvck1lc3NhZ2U6ICIiLAogICAgICB1c2VyUm9sZTogIiIsCiAgICAgIC8vVE9LRU4KICAgICAgdG9rZW46IGdldEF1dGhUb2tlbigpCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgdXNlcnByb2ZpbGU6IHVzZXJwcm9maWxlCiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVVc2VyRGF0YTogZnVuY3Rpb24gdXBkYXRlVXNlckRhdGEodXNlckRhdGEpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRhdGEsIGNvbmZpZywgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInVwZGF0ZVVzZXJEYXRhIik7IC8vREFUT1MgREVMIFVTVUFSSU8KCiAgICAgICAgICAgICAgICBkYXRhID0gewogICAgICAgICAgICAgICAgICBuYW1lOiB1c2VyRGF0YS5uYW1lLAogICAgICAgICAgICAgICAgICBsYXN0X25hbWU6IHVzZXJEYXRhLmxhc3RuYW1lLAogICAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlckRhdGEudXNlcm5hbWUsCiAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyRGF0YS5lbWFpbCwKICAgICAgICAgICAgICAgICAgcHJvZmlsZV9iaW86IHVzZXJEYXRhLnByb2ZpbGUKICAgICAgICAgICAgICAgIH07IC8vQ0FCRUNFUkEgREUgQVVUT1JJWkFDSU9OCgogICAgICAgICAgICAgICAgY29uZmlnID0gewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogX3RoaXMudG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucHV0KCJodHRwOi8vbG9jYWxob3N0OjMwMDAvdXNlcnMvZWRpdC1wcm9maWxlLyIgKyB1c2VyRGF0YS5pZCwgZGF0YSwgY29uZmlnKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gYWxlcnRGdW5jdGlvbigic3VjY2VzcyIsICJBY3R1YWxpemFkbyIsICJIYXMgZWRpdGFkbyBsb3MgZGF0b3MgZGUgIi5jb25jYXQoZGF0YS51c2VybmFtZSwgIiBleGl0b3NhbWVudGUiKSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTI7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgICAgX3RoaXMuc2hvd0Vycm9yID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzLmVycm9yTWVzc2FnZSA9IF9jb250ZXh0LnQwLnJlc3BvbnNlLmRhdGEubWVzc2FnZTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMywgMTJdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vVFJBSUdPIExBIElORk8gREVMIFBFUkZJTCBERSBVU1VBUklPIERFIExBIEJCREQKICAgIGdldFVzZXJQcm9maWxlOiBmdW5jdGlvbiBnZXRVc2VyUHJvZmlsZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29uZmlnLCB1c2VySWQsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZ2V0VXNlcnByb2ZpbGUiKTsgLy9DQUJFQ0VSQSBERSBBVVRPUklaQUNJT04KCiAgICAgICAgICAgICAgICBjb25maWcgPSB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBfdGhpczIudG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHVzZXJJZCA9IGdldElkVG9rZW4oX3RoaXMyLnRva2VuKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c2Vycy9wcm9maWxlLyIgKyB1c2VySWQsIGNvbmZpZyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpczIucHJvZmlsZSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMi5wcm9maWxlLmF2YXRhciA9IHByb2Nlc3MuZW52LlZVRV9BUFBfU1RBVElDICsgX3RoaXMyLnByb2ZpbGUuYXZhdGFyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgzKTsKICAgICAgICAgICAgICAgIF90aGlzMi5zaG93RXJyb3IgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXMyLmVycm9yTWVzc2FnZSA9IF9jb250ZXh0Mi50MC5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMywgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0VXNlclByb2ZpbGUoKTsKICB9Cn07"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;AAQA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,SACA,YADA,EAEA,UAFA,EAGA,aAHA,EAIA,YAJA,QAKA,kBALA;AAOA,OAAA,WAAA,MAAA,8BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA;AACA,MAAA,SAAA,EAAA,KALA;AAMA,MAAA,YAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA;AACA,MAAA,KAAA,EAAA,YAAA;AATA,KAAA;AAWA,GAdA;AAeA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAfA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,QADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EADA,CAEA;;AACA,gBAAA,IAHA,GAGA;AACA,kBAAA,IAAA,EAAA,QAAA,CAAA,IADA;AAEA,kBAAA,SAAA,EAAA,QAAA,CAAA,QAFA;AAGA,kBAAA,QAAA,EAAA,QAAA,CAAA,QAHA;AAIA,kBAAA,KAAA,EAAA,QAAA,CAAA,KAJA;AAKA,kBAAA,WAAA,EAAA,QAAA,CAAA;AALA,iBAHA,EAUA;;AACA,gBAAA,MAXA,GAWA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,EAAA,KAAA,CAAA;AADA;AADA,iBAXA;AAAA;AAAA;AAAA,uBAkBA,KAAA,CAAA,GAAA,CACA,8CAAA,QAAA,CAAA,EADA,EAEA,IAFA,EAGA,MAHA,CAlBA;;AAAA;AAkBA,gBAAA,QAlBA;AAAA;AAAA,uBAwBA,aAAA,CACA,SADA,EAEA,aAFA,qCAGA,IAAA,CAAA,QAHA,mBAxBA;;AAAA;AA6BA,gBAAA,QAAA,CAAA,MAAA;AA7BA;AAAA;;AAAA;AAAA;AAAA;AA+BA,gBAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,YAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA,KAnCA;AAoCA;AACA,IAAA,cArCA,4BAqCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EADA,CAEA;;AACA,gBAAA,MAHA,GAGA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,EAAA,MAAA,CAAA;AADA;AADA,iBAHA;AASA,gBAAA,MATA,GASA,UAAA,CAAA,MAAA,CAAA,KAAA,CATA;AAAA;AAAA;AAAA,uBAWA,KAAA,CAAA,GAAA,CACA,yCAAA,MADA,EAEA,MAFA,CAXA;;AAAA;AAWA,gBAAA,QAXA;AAeA,gBAAA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AAEA,gBAAA,MAAA,CAAA,OAAA,CAAA,MAAA,GAAA,OAAA,CAAA,GAAA,CAAA,cAAA,GAAA,MAAA,CAAA,OAAA,CAAA,MAAA;AAjBA;AAAA;;AAAA;AAAA;AAAA;AAmBA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,aAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AA3DA,GAnBA;AAgFA,EAAA,OAhFA,qBAgFA;AACA,SAAA,cAAA;AACA;AAlFA,CAAA","sourcesContent":["<template>\n  <div>\n    <p v-show=\"showError\">{{ errorMessage }}</p>\n    <userprofile v-on:iduserupdate=\"updateUserData\" :userdata=\"profile\" />\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  getRoleToken,\n} from \"../utils/helpers\";\n\nimport userprofile from \"@/components/UserProfile.vue\";\nexport default {\n  name: \"Profile\",\n  data() {\n    return {\n      //variables de vista\n      profile: {},\n      userLanguages: [],\n      //variables de gestion de errores\n      showError: false,\n      errorMessage: \"\",\n      userRole: \"\",\n      //TOKEN\n      token: getAuthToken(),\n    };\n  },\n  components: {\n    userprofile,\n  },\n\n  methods: {\n    async updateUserData(userData) {\n      console.log(\"updateUserData\");\n      //DATOS DEL USUARIO\n      let data = {\n        name: userData.name,\n        last_name: userData.lastname,\n        username: userData.username,\n        email: userData.email,\n        profile_bio: userData.profile,\n      };\n      //CABECERA DE AUTORIZACION\n      let config = {\n        headers: {\n          Authorization: this.token,\n        },\n      };\n\n      try {\n        const response = await axios.put(\n          \"http://localhost:3000/users/edit-profile/\" + userData.id,\n          data,\n          config\n        );\n        //ALERT DE EDITAR\n        await alertFunction(\n          \"success\",\n          \"Actualizado\",\n          `Has editado los datos de ${data.username} exitosamente`\n        );\n        location.reload();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //TRAIGO LA INFO DEL PERFIL DE USUARIO DE LA BBDD\n    async getUserProfile() {\n      console.log(\"getUserprofile\");\n      //CABECERA DE AUTORIZACION\n      let config = {\n        headers: {\n          Authorization: this.token,\n        },\n      };\n\n      let userId = getIdToken(this.token);\n      try {\n        const response = await axios.get(\n          \"http://localhost:3000/users/profile/\" + userId,\n          config\n        );\n        this.profile = response.data.data;\n\n        this.profile.avatar = process.env.VUE_APP_STATIC + this.profile.avatar;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  created() {\n    this.getUserProfile();\n  },\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/views"}]}