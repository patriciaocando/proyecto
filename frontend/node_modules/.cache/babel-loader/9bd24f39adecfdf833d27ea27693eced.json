{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/NewAnswer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/views/NewAnswer.vue","mtime":1596664909755},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9wYXRyaWNpYS9oYWNrYWJvc3MvUFJPWUVDVE8vZnJvbnRlbmQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcGF0cmljaWEvaGFja2Fib3NzL1BST1lFQ1RPL2Zyb250ZW5kL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHNob3dxdWVzdGlvbnMgZnJvbSAiQC9jb21wb25lbnRzL0dldFF1ZXN0aW9ucy52dWUiOwppbXBvcnQgeyBnZXRBdXRoVG9rZW4sIGdldElkVG9rZW4sIGFsZXJ0RnVuY3Rpb24sIGdldFJvbGVUb2tlbiB9IGZyb20gIi4uL3V0aWxzL2hlbHBlcnMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk5ld0Fuc3dlciIsCiAgY29tcG9uZW50czogewogICAgc2hvd3F1ZXN0aW9uczogc2hvd3F1ZXN0aW9ucwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXN0aW9uczogW10sCiAgICAgIC8vdmFyaWFsZXMgZGUgbGEgdmlzdGEKICAgICAgYW5zd2VyOiAiIiwKICAgICAgc2hvd0Vycm9yOiBmYWxzZSwKICAgICAgZXJyb3JNZXNzYWdlOiAiIiwKICAgICAgLy9UT0tFTgogICAgICB0b2tlbjogZ2V0QXV0aFRva2VuKCkKICAgIH07CiAgfSwKICBtZXRob2RzOiBfZGVmaW5lUHJvcGVydHkoewogICAgY2FuY2VsQWN0aW9uOiBmdW5jdGlvbiBjYW5jZWxBY3Rpb24oKSB7CiAgICAgIHRoaXMuYW5zd2VyID0gIiI7CiAgICB9LAogICAgcHVibGlzaEFuc3dlcjogZnVuY3Rpb24gcHVibGlzaEFuc3dlcigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbmZpZywgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgLy9DQUJFQ0VSQSBERSBBVVRPUklaQUNJT04KICAgICAgICAgICAgICAgIGNvbmZpZyA9IHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IF90aGlzLnRva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9uZXctYW5zd2VyLyIgKyAxMywgY29uZmlnKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIF90aGlzLnNob3dFcnJvciA9IHRydWU7CiAgICAgICAgICAgICAgICBfdGhpcy5lcnJvck1lc3NhZ2UgPSBfY29udGV4dC50MC5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDddXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vdHJhZXIgbG9zIGxlbmd1YWdlcyBkZWwgZXhwZXJ0bwogICAgZ2V0RXhwZXJ0TGFuZ3VhZ2U6IGZ1bmN0aW9uIGdldEV4cGVydExhbmd1YWdlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb25maWcsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICAvL0NBQkVDRVJBIERFIEFVVE9SSVpBQ0lPTgogICAgICAgICAgICAgICAgY29uZmlnID0gewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogX3RoaXMyLnRva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBnZXRJZFRva2VuKF90aGlzMi50b2tlbik7CiAgICAgICAgICAgICAgICBnZXRSb2xlVG9rZW4oX3RoaXMyLnRva2VuKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9leHBlcnQvbGFuZ3VhZ2VzIiwgY29uZmlnKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgX3RoaXMyLnNob3dFcnJvciA9IHRydWU7CiAgICAgICAgICAgICAgICBfdGhpczIuZXJyb3JNZXNzYWdlID0gX2NvbnRleHQyLnQwLnJlc3BvbnNlLmRhdGEubWVzc2FnZTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL1RSQUlHTyBUT0RBUyBMQVMgUFJFR1VOVEFTIERFIExBIEJCREQKICAgIGdldFF1ZXN0aW9uczogZnVuY3Rpb24gZ2V0UXVlc3Rpb25zKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL3F1ZXN0aW9ucyIpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMzLnF1ZXN0aW9ucyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgX3RoaXMzLnNob3dFcnJvciA9IHRydWU7CiAgICAgICAgICAgICAgICBfdGhpczMuZXJyb3JNZXNzYWdlID0gX2NvbnRleHQzLnQwLnJlc3BvbnNlLmRhdGEubWVzc2FnZTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA3XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9LCAicHVibGlzaEFuc3dlciIsIGZ1bmN0aW9uIHB1Ymxpc2hBbnN3ZXIoKSB7CiAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICB0cnkge30gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBfdGhpczQuc2hvd0Vycm9yID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzNC5lcnJvck1lc3NhZ2UgPSBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpKCk7CiAgfSksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0UXVlc3Rpb25zKCk7CiAgICB0aGlzLmdldEV4cGVydExhbmd1YWdlKCk7CiAgfQp9Ow=="},{"version":3,"sources":["NewAnswer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h3>RESPUESTA:</h3>\n    <p v-show=\"showError\">{{ errorMessage }}</p>\n    <!--  <showquestions :questions=\"questions\" /> -->\n    <input type=\"textarea\" v-model=\"answer\" />\n    <button @click=\"publishAnswer()\">RESPONDER</button>\n    <button class=\"cancelButton\" @click=\"cancelAction()\">CANCELAR</button>\n    <br />\n    <button>\n      <router-link :to=\"{ name: 'UserAnswers' }\">Ver todas mis respuestas</router-link>\n    </button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport showquestions from \"@/components/GetQuestions.vue\";\nimport {\n  getAuthToken,\n  getIdToken,\n  alertFunction,\n  getRoleToken,\n} from \"../utils/helpers\";\n\nexport default {\n  name: \"NewAnswer\",\n  components: {\n    showquestions,\n  },\n  data() {\n    return {\n      questions: [],\n      //variales de la vista\n      answer: \"\",\n      showError: false,\n      errorMessage: \"\",\n      //TOKEN\n      token: getAuthToken(),\n    };\n  },\n\n  methods: {\n    cancelAction() {\n      this.answer = \"\";\n    },\n    async publishAnswer() {\n      //CABECERA DE AUTORIZACION\n      let config = {\n        headers: {\n          Authorization: this.token,\n        },\n      };\n      try {\n        const response = await axios.post(\n          \"http://localhost:3000/new-answer/\" + 13,\n          config\n        );\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //traer los lenguages del experto\n    async getExpertLanguage() {\n      try {\n        //CABECERA DE AUTORIZACION\n        let config = {\n          headers: {\n            Authorization: this.token,\n          },\n        };\n        getIdToken(this.token);\n        getRoleToken(this.token);\n        const response = await axios.get(\n          \"http://localhost:3000/expert/languages\",\n          config\n        );\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n    //TRAIGO TODAS LAS PREGUNTAS DE LA BBDD\n    async getQuestions() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/questions\");\n        this.questions = response.data.data;\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n\n    async publishAnswer() {\n      try {\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = error.response.data.message;\n      }\n    },\n  },\n  created() {\n    this.getQuestions();\n    this.getExpertLanguage();\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}