{"remainingRequest":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/src/components/GetQuestions.vue","mtime":1598266591776},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/patricia/hackaboss/PROYECTO/frontend/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3BhdHJpY2lhL2hhY2thYm9zcy9QUk9ZRUNUTy9mcm9udGVuZC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGdldEF1dGhUb2tlbiB9IGZyb20gIi4uL3V0aWxzL2hlbHBlcnMiOwppbXBvcnQgeyBmb3JtYXQsIGZvcm1hdERpc3RhbmNlIH0gZnJvbSAiZGF0ZS1mbnMiOwppbXBvcnQgZXMgZnJvbSAiZGF0ZS1mbnMvbG9jYWxlL2VzIjsKaW1wb3J0IHF1ZXN0aW9uIGZyb20gIkAvY29tcG9uZW50cy9RdWVzdGlvbi52dWUiOwppbXBvcnQgZ2V0YW5zd2VyIGZyb20gIkAvY29tcG9uZW50cy9HZXRBbnN3ZXIudnVlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTaG93UXVlc3Rpb25zIiwKICBjb21wb25lbnRzOiB7CiAgICBnZXRhbnN3ZXI6IGdldGFuc3dlciwKICAgIHF1ZXN0aW9uOiBxdWVzdGlvbgogIH0sCiAgcHJvcHM6IHsKICAgIHF1ZXN0aW9uczogQXJyYXksCiAgICBhbnN3ZXJzOiBBcnJheQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlkUXVlc3Rpb246IDIsCiAgICAgIGhpZGVBbnN3ZXJzOiB0cnVlLAogICAgICBzZWVBbnN3ZXJzQnV0dG9uOiBmYWxzZSwKICAgICAgaGlkZUFuc3dlcjogdHJ1ZSwKICAgICAgLy92YXJpYWJsZSBwYXJhIG9jdWx0YXIgYm90b24gc2kgbm8gZXN0YSBhdXRlbnRpY2FkbyBlbCB1c3VhcmlvCiAgICAgIGlzVXNlcjogIiIsCiAgICAgIC8vVmFyaWFibGUgcGFyYSBzYWJlciBlbCBpbmRpY2UgZGUgbGEgcHJlZ3VudGEgZGUgbGEgcXVlIHNlIGRlc2VhIHZlciBsYSByZXNwdWVzdGEKICAgICAgYW5zd2VyOiAiIiwKICAgICAgYnV0dG9uVGV4dDogIlZFUiBSRVNQVUVTVEFTIiwKICAgICAgLy9yb3V0ZQogICAgICByb3V0ZTogIiIsCiAgICAgIC8vVE9LRU4KICAgICAgdG9rZW46ICIiCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIG1ldGhvZHM6IHsKICAgIGdldFJhdGluZzogZnVuY3Rpb24gZ2V0UmF0aW5nKGRhdGEpIHsKICAgICAgdGhpcy4kZW1pdCgicmF0ZUFuc3dlciIsIGRhdGEpOwogICAgfSwKICAgIGdldEF1dGVudGljYXRpb246IGZ1bmN0aW9uIGdldEF1dGVudGljYXRpb24odG9rZW4pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKHRva2VuID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLmlzVXNlciA9IGZhbHNlOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuaXNVc2VyID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGVkaXRRdWVzdGlvbklkOiBmdW5jdGlvbiBlZGl0UXVlc3Rpb25JZChpZCkgewogICAgICB0aGlzLiRlbWl0KCJlZGl0cXVlc3Rpb24iLCBpZCk7CiAgICB9LAogICAgc2VuZFF1ZXN0aW9uSWQ6IGZ1bmN0aW9uIHNlbmRRdWVzdGlvbklkKGlkLCBpbmRleCkgewogICAgICAvL3RoaXMuaGlkZUFuc3dlciA9ICF0aGlzLmhpZGVBbnN3ZXI7CiAgICAgIHRoaXMuYW5zd2VyID0gaW5kZXg7CgogICAgICBpZiAodGhpcy5oaWRlQW5zd2VyID09PSBmYWxzZSkgewogICAgICAgIHRoaXMuYnV0dG9uVGV4dCA9ICJPQ1VMVEFSIFJFU1BVRVNUQVMiOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuYnV0dG9uVGV4dCA9ICJWRVIgUkVTUFVFU1RBUyI7CiAgICAgIH0KCiAgICAgIHRoaXMuaGlkZUFuc3dlciA9ICF0aGlzLmhpZGVBbnN3ZXI7CiAgICAgIHRoaXMuJGVtaXQoInNob3dBbnN3ZXJzIiwgaWQpOwogICAgfSwKICAgIHNlbmRTZWFyY2hQYXJhbXM6IGZ1bmN0aW9uIHNlbmRTZWFyY2hQYXJhbXMoKSB7CiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgbmFtZTogdGhpcy5hdXRvciwKICAgICAgICBkaXJlY3Rpb246IHRoaXMub3JkZXIsCiAgICAgICAgc2VhcmNoOiB0aGlzLnNlYXJjaCwKICAgICAgICBsYW5ndWFnZTogdGhpcy5sYW5ndWFnZSwKICAgICAgICBkYXRlX2luaXQ6IHRoaXMuZGF0ZUluaXQsCiAgICAgICAgZGF0ZV9lbmQ6IHRoaXMuZGF0ZUVuZCwKICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzCiAgICAgIH07CiAgICB9LAogICAgc2hvd0ZpbHRlcjogZnVuY3Rpb24gc2hvd0ZpbHRlcigpIHsKICAgICAgaWYgKHRoaXMuZmlsdGVyKSB7CiAgICAgICAgdGhpcy5maWx0ZXIgPSBmYWxzZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmZpbHRlciA9IHRydWU7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpczIudG9rZW4gPSBnZXRBdXRoVG9rZW4oKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRBdXRlbnRpY2F0aW9uKF90aGlzMi50b2tlbik7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX3RoaXMyLnJvdXRlID0gX3RoaXMyLiRyb3V0ZS5uYW1lOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["GetQuestions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"questionAnswerContainer\" v-for=\"(question, index) in questions\" :key=\"question.id\">\n      <question :question=\"question\" :route=\"route\" @editquestion=\"editQuestionId\" />\n\n      <span class=\"answerMeta\">\n        <button\n          id=\"buttonAnswer\"\n          v-show=\"isUser\"\n          :class=\"{ hideButton: question.answers <= 0 }\"\n          @click=\"sendQuestionId(question.id, index)\"\n        >{{buttonText}}</button>\n      </span>\n\n      <!--MOSTRAR LAS RESPUESTAS-->\n\n      <getanswer\n        v-show=\"hideAnswer\"\n        class=\"answerContent\"\n        v-if=\"index === answer\"\n        :answers=\"answers\"\n        v-on:newVote=\"getRating\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getAuthToken } from \"../utils/helpers\";\nimport { format, formatDistance } from \"date-fns\";\nimport es from \"date-fns/locale/es\";\n\nimport question from \"@/components/Question.vue\";\nimport getanswer from \"@/components/GetAnswer.vue\";\n\nexport default {\n  name: \"ShowQuestions\",\n  components: {\n    getanswer,\n    question,\n  },\n  props: {\n    questions: Array,\n    answers: Array,\n  },\n  data() {\n    return {\n      idQuestion: 2,\n      hideAnswers: true,\n      seeAnswersButton: false,\n      hideAnswer: true,\n      //variable para ocultar boton si no esta autenticado el usuario\n      isUser: \"\",\n\n      //Variable para saber el indice de la pregunta de la que se desea ver la respuesta\n      answer: \"\",\n      buttonText: \"VER RESPUESTAS\",\n      //route\n      route: \"\",\n\n      //TOKEN\n      token: \"\",\n    };\n  },\n  computed: {},\n\n  methods: {\n    getRating(data) {\n      this.$emit(\"rateAnswer\", data);\n    },\n    async getAutentication(token) {\n      if (token === null) {\n        this.isUser = false;\n      } else {\n        this.isUser = true;\n      }\n    },\n    editQuestionId(id) {\n      this.$emit(\"editquestion\", id);\n    },\n    sendQuestionId(id, index) {\n      //this.hideAnswer = !this.hideAnswer;\n      this.answer = index;\n      if (this.hideAnswer === false) {\n        this.buttonText = \"OCULTAR RESPUESTAS\";\n      } else {\n        this.buttonText = \"VER RESPUESTAS\";\n      }\n      this.hideAnswer = !this.hideAnswer;\n\n      this.$emit(\"showAnswers\", id);\n    },\n\n    sendSearchParams() {\n      let params = {\n        name: this.autor,\n        direction: this.order,\n        search: this.search,\n        language: this.language,\n        date_init: this.dateInit,\n        date_end: this.dateEnd,\n        status: this.status,\n      };\n    },\n    showFilter() {\n      if (this.filter) {\n        this.filter = false;\n      } else {\n        this.filter = true;\n      }\n    },\n  },\n  async created() {\n    this.token = getAuthToken();\n    await this.getAutentication(this.token);\n    this.route = this.$route.name;\n  },\n};\n</script>\n\n<style scoped>\n.questionAnswerContainer {\n  background-color: var(--ligthColor);\n  margin-bottom: 1.5rem;\n  padding-bottom: 1.5rem;\n}\n\n.hideButton {\n  display: none;\n}\n\n.hideQuestion {\n  display: none;\n}\n\n.answerMeta {\n  display: flex;\n  flex-direction: column;\n  align-items: space-around;\n  margin: 0 0 1.5rem 0;\n}\n\n#buttonAnswer {\n  margin: 0 1.5rem;\n}\n\n@media only screen and (min-width: 600px) {\n  .answerMeta {\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-bottom: 1rem;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .answerMeta {\n    flex-direction: row;\n    justify-content: flex-end;\n    margin-bottom: 2rem;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}